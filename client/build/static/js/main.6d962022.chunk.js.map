{"version":3,"sources":["routes/Base/Base.js","assets/images/logo-white.png","components/Modal/Modal.js","components/DesktopMenu/DesktopMenu.js","components/MobileFooterMenu/MobileFooterMenu.js","assets/images/default-profile-pic.png","components/MobileMenu/MobileMenu.js","components/MobileHeader/MobileHeader.js","routes/Explore/Explore.js","assets/images/twitter-logo.png","components/AuthHeader/AuthHeader.js","routes/ForgotPassword/ForgotPassword.js","components/TweetFooter/TweetFooter.js","components/Tweet/Tweet.js","components/TweetOptions/TweetOptions.js","components/Overlay/Overlay.js","components/NewTweetButton/NewTweetButton.js","components/ShareTweet/ShareTweet.js","routes/Home/Home.js","routes/Login/Login.js","routes/Messages/Messages.js","routes/Notifications/Notifications.js","routes/SignUp/SignUp.js","components/ComposeTweetHeader/ComposeTweetHeader.js","components/ComposeTweetMain/ComposeTweetMain.js","routes/ComposeTweet/ComposeTweet.js","routes/DetailedTweet/DetailedTweet.js","routes/ReplyTweet/ReplyTweet.js","assets/images/retweet.svg","routes/Profile/Profile.js","routes/ProfileSettings/ProfileSettings.js","components/SettingsHeader/SettingsHeader.js","routes/Settings/Settings.js","routes/AccountSettings/AccountSettings.js","routes/ChangePassword/ChangePassword.js","routes/DeactivateAccount/DeactivateAccount.js","routes/AccountInformation/AccountInformation.js","routes/ChangeUsername/ChangeUsername.js","routes/ChangeEmail/ChangeEmail.js","routes/Bookmarks/Bookmarks.js","components/UserPreview/UserPreview.js","components/UserNetwork/UserNetwork.js","routes/Followers/Followers.js","routes/Following/Following.js","components/ComingSoon/ComingSoon.js","components/DetailedTweetInfo/DetailedTweetInfo.js","routes/DetailedTweetLikes/DetailedTweetLikes.js","routes/DetailedTweetRetweets/DetailedTweetRetweets.js","App.js","index.js"],"names":["Base","navigate","useNavigate","handleSignUpClick","_jsxs","className","children","_jsx","onClick","style","width","marginRight","version","xmlns","viewBox","class","fill","d","height","marginTop","display","flexDirection","alignItems","marginLeft","Modal","_ref","isOpen","onClose","_Fragment","justifyContent","cursor","fontSize","marginBottom","fontFamily","fontWeight","href","textDecoration","margin","DesktopMenu","activeUser","page","homeInactive","useRef","homeActive","homeText","exploreInactive","exploreActive","exploreText","notificationsInactive","notificationsActive","notificationsText","messagesInactive","messagesActive","messagesText","bookmarksInactive","bookmarksActive","bookmarksText","profileInactive","profileActive","profileText","settingsInactive","settingsActive","settingsText","inactiveIcons","activeIcons","linksText","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","useEffect","forEach","icon","current","dataset","opacity","text","src","xlogo","alt","Link","to","ref","stroke","strokeLinecap","strokeLinejoin","strokeWidth","concat","username","fillRule","clipRule","MobileFooterMenu","MobileMenu","handleMobileMenuToggle","profilePic","displayName","following","length","followers","target","rel","MobileHeader","menuOpen","setMenuOpen","menuContainer","overlay","classList","add","remove","Explore","AuthHeader","twitterLogo","ForgotPassword","userDetail","setUserDetail","_useState3","_useState4","disabled","setDisabled","_useState5","_useState6","emailSent","setEmailSent","userDetailElement","userDetailErrorMessage","trim","onSubmit","e","preventDefault","axios","post","then","res","status","border","catch","err","response","console","log","type","name","placeholder","value","onChange","TweetFooter","tweet","user","handleLike","handleUnlike","handleRetweet","handleRemoveRetweet","handleShareTweet","likeButton","retweetButton","checkLiked","likes","includes","_id","checkRetweeted","retweets","replies","Tweet","handleTweetOptions","originalTweetUsername","setOriginalTweetUsername","getOriginalTweetUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tweetRes","originalTweet","userRes","_user","wrap","_context","prev","next","fetch","replyTo","sent","json","userId","t0","stop","apply","arguments","reply","tweetTime","Date","createdAt","difference","now","toFixed","toLocaleDateString","displayDate","TweetOptions","handleOptionsView","handleDeleteTweet","handleDeleteReply","confirmationModalDisplay","setConfirmationModalDisplay","handleConfirmationDisplayToggle","Overlay","NewTweetButton","ShareTweet","handleShareView","handleBookmark","handleRemoveBookmark","handleCopyLink","navigator","clipboard","writeText","window","alert","bookmarks","Home","handleNewTweet","tweets","setTweets","users","setUsers","newTweetText","setNewTweetText","_useState7","_useState8","_useState9","_useState10","optionsDisplay","setOptionsDisplay","_useState11","_useState12","tweetOptions","setTweetOptions","_useState13","_useState14","shareDisplay","setShareDisplay","_useState15","_useState16","tweetShare","setTweetShare","get","data","allUsers","push","uniqueUsers","_toConsumableArray","Map","map","values","handleTweetOptionsEvent","handleShareTweetEvent","tweetsDisplay","sort","a","b","find","scrollHeight","id","x1","y1","x2","y2","cx","cy","r","points","rx","ry","Login","handleSetActiveUser","userLoginDetail","setUserLoginDetail","password","setPassword","emailCompleted","setEmailCompleted","userLoginDetailElement","userLoginDetailErrorMessage","passwordElement","passwordErrorMessage","Messages","Notifications","SignUp","setName","email","setEmail","emailAvailable","setEmailAvailable","setUsername","confirmedPassword","setConfirmedPassword","nextDisabled","setNextDisabled","signupDisabled","setSignupDisabled","emailElement","emailErrorMessage","usernameElement","usernameErrorMessage","confirmedPasswordElement","confirmedPasswordErrorMessage","color","focus","tabIndex","ComposeTweetHeader","handleReply","tweetId","ComposeTweetMain","handleSetDisabled","handleSetText","limitWarning","NewTweet","tweetText","setTweetText","boolean","val","DetailedTweet","useParams","setTweet","setUser","replyText","setReplyText","replyBtnDisplay","setReplyBtnDisplay","setReplies","replyUsers","setReplyUsers","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","allReplies","replyId","allReplyUsers","formatNumber","num","repliesDisplay","replyUser","tweetDateTime","getHours","getMinutes","getDate","getMonth","getFullYear","tweetDate","onFocus","ReplyTweet","Profile","handleFollowUser","handleUnfollowUser","setRetweets","retweetUsers","setRetweetUsers","likedTweets","setLikedTweets","likedTweetsUsers","setLikedTweetsUsers","tweetTab","repliesTab","mediaTab","likesTab","activeTab","setActiveTab","allRetweetUsers","allLikedTweetsUsers","tab","sortTweets","bio","creationDate","getJoinedDate","filteredTweets","filter","reverse","filterTweets","tweetUser","retweetIcon","getTweetsDisplay","ProfileSettings","handleUpdateProfile","setBio","nameInput","nameErrorMessage","bioInput","bioErrorMessage","htmlFor","innerText","SettingsHeader","pageTitle","Settings","AccountSettings","ChangePassword","handleChangePassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","currentPasswordInput","currentPasswordErrorMessage","newPasswordInput","newPasswordErrorMessage","confirmedPasswordInput","DeactivateAccount","handleDeactivateAccount","deactivateClicked","setDeactivateClicked","passwordInput","deleteTweets","delete","index","array","AccountInformation","creationDateTime","hours","minutes","seconds","getSeconds","toDateString","getAccountCreationTime","ChangeUsername","handleUsernameChange","usernameInput","ChangeEmail","handleEmailChange","newEmail","setNewEmail","newEmailInput","newEmailErrorMessage","readOnly","test","Bookmarks","handleClearBookmarks","setBookmarks","bookmarkUsers","setBookmarkUsers","bookmarkOptionsDisplay","setBookmarkOptionsDisplay","allBookmarksUsers","handleBookmarkOptionsView","UserPreview","handleFollow","handleUnfollow","UserNetwork","Followers","setFollowers","Following","setFollowing","ComingSoon","DetailedTweetInfo","DetailedTweetLikes","DetailedTweetRetweets","App","setActiveUser","localStorage","getItem","JSON","parse","setItem","stringify","handleTweetEvent","action","put","currentUser","Router","Routes","Route","path","element","ComposeTweet","body","newUsername","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d962022.chunk.js","sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Base.scss\";\n\nconst Base = () => {\n  const navigate = useNavigate();\n\n  const handleSignUpClick = () => {\n    navigate(\"/signup\");\n  };\n\n  const handleLoginClick = () => {\n    navigate(\"/login\");\n  };\n\n  return (\n    <main className=\"base-main\">\n      <div className=\"base-graphic\"></div>\n      <div className=\"main-signup-login\">\n        <h1 className=\"hidden\">Twitter</h1>\n        <span className=\"intro-message\">Happening now</span>\n        <div className=\"actions-container\">\n          <div className=\"signup-container\">\n            <span className=\"signup-text\">Join today.</span>\n            <button className=\"google-button\" onClick={handleSignUpClick}>\n              <div style={{ width: 15, marginRight: 5 }}>\n                <svg\n                  version=\"1.1\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 48 48\"\n                  class=\"LgbsSe-Bz112c\"\n                >\n                  <g>\n                    <path\n                      fill=\"#EA4335\"\n                      d=\"M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z\"\n                    ></path>\n                    <path\n                      fill=\"#4285F4\"\n                      d=\"M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z\"\n                    ></path>\n                    <path\n                      fill=\"#FBBC05\"\n                      d=\"M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z\"\n                    ></path>\n                    <path\n                      fill=\"#34A853\"\n                      d=\"M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z\"\n                    ></path>\n                    <path fill=\"none\" d=\"M0 0h48v48H0z\"></path>\n                  </g>\n                </svg>\n              </div>\n              Sign Up with Google\n            </button>\n            <button className=\"apple-button\" onClick={handleSignUpClick}>\n              <div style={{ width: 15, marginRight: 5 }}>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"16\"\n                  height=\"16\"\n                  fill=\"currentColor\"\n                  class=\"bi bi-apple\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  {\" \"}\n                  <path d=\"M11.182.008C11.148-.03 9.923.023 8.857 1.18c-1.066 1.156-.902 2.482-.878 2.516.024.034 1.52.087 2.475-1.258.955-1.345.762-2.391.728-2.43zm3.314 11.733c-.048-.096-2.325-1.234-2.113-3.422.212-2.189 1.675-2.789 1.698-2.854.023-.065-.597-.79-1.254-1.157a3.692 3.692 0 0 0-1.563-.434c-.108-.003-.483-.095-1.254.116-.508.139-1.653.589-1.968.607-.316.018-1.256-.522-2.267-.665-.647-.125-1.333.131-1.824.328-.49.196-1.422.754-2.074 2.237-.652 1.482-.311 3.83-.067 4.56.244.729.625 1.924 1.273 2.796.576.984 1.34 1.667 1.659 1.899.319.232 1.219.386 1.843.067.502-.308 1.408-.485 1.766-.472.357.013 1.061.154 1.782.539.571.197 1.111.115 1.652-.105.541-.221 1.324-1.059 2.238-2.758.347-.79.505-1.217.473-1.282z\" />{\" \"}\n                  <path d=\"M11.182.008C11.148-.03 9.923.023 8.857 1.18c-1.066 1.156-.902 2.482-.878 2.516.024.034 1.52.087 2.475-1.258.955-1.345.762-2.391.728-2.43zm3.314 11.733c-.048-.096-2.325-1.234-2.113-3.422.212-2.189 1.675-2.789 1.698-2.854.023-.065-.597-.79-1.254-1.157a3.692 3.692 0 0 0-1.563-.434c-.108-.003-.483-.095-1.254.116-.508.139-1.653.589-1.968.607-.316.018-1.256-.522-2.267-.665-.647-.125-1.333.131-1.824.328-.49.196-1.422.754-2.074 2.237-.652 1.482-.311 3.83-.067 4.56.244.729.625 1.924 1.273 2.796.576.984 1.34 1.667 1.659 1.899.319.232 1.219.386 1.843.067.502-.308 1.408-.485 1.766-.472.357.013 1.061.154 1.782.539.571.197 1.111.115 1.652-.105.541-.221 1.324-1.059 2.238-2.758.347-.79.505-1.217.473-1.282z\" />{\" \"}\n                </svg>\n              </div>\n              Sign Up with Apple\n            </button>\n\n            <div\n              style={{\n                marginTop: 20,\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <div style={{ width: 50, marginRight: 10 }}>\n                <hr></hr>\n              </div>\n              OR\n              <div style={{ width: 50, marginLeft: 10 }}>\n                <hr></hr>\n              </div>\n            </div>\n            <button className=\"signup-button\" onClick={handleSignUpClick}>\n              Sign up\n            </button>\n            <span className=\"signup-info\">\n              By signing up, you agree to the{\" \"}\n              <span className=\"info-link\">Terms of Service </span>\n              and <span className=\"info-link\">Privacy Policy</span>, including{\" \"}\n              <span className=\"info-link\">Cookie Use</span>.\n            </span>\n          </div>\n          <div className=\"login-container\">\n            <span className=\"login-text\">Already have an account?</span>\n            <button className=\"login-button\" onClick={handleLoginClick}>\n              Sign in\n            </button>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Base;\n","export default __webpack_public_path__ + \"static/media/logo-white.4d73a492.png\";","import React from \"react\";\r\nimport \"../Modal/Modal.scss\";\r\n\r\nexport default function Modal({ isOpen, onClose }) {\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div className=\"overlay\"></div>\r\n        <div className=\"modal-content\">\r\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <span\r\n              className=\"close\"\r\n              onClick={onClose}\r\n              style={{ cursor: \"pointer\", fontSize: 30 }}\r\n            >\r\n              &times;\r\n            </span>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"column\",\r\n              marginBottom: 20,\r\n            }}\r\n          >\r\n            <h2\r\n              style={{ marginBottom: 20, fontSize: 30, fontFamily: \"Roboto\" }}\r\n            >\r\n              Who are you?\r\n            </h2>\r\n            <h4>Choose the right subscription for you:</h4>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <button className=\"button\">\r\n                Premium<br></br>\r\n                <span style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  I am an individual\r\n                </span>\r\n                <br></br>\r\n                For individual and Creators\r\n              </button>\r\n              <button className=\"button\">\r\n                Verified Organizations<br></br>\r\n                <span style={{ fontWeight: \"bold\", fontSize: 16 }}>\r\n                  I am an organization\r\n                </span>\r\n                <br></br>\r\n                For businesses, government agencies, and non-profits\r\n              </button>\r\n            </div>\r\n            <button className=\"subscribeButton\">Subscribe</button>\r\n            <p style={{ marginTop: \"30px\" }}>\r\n              Learn more about\r\n              <a href=\"#home\" style={{ textDecoration: \"none\", margin: 10 }}>\r\n                Premium\r\n              </a>\r\n              and\r\n              <a href=\"#home\" style={{ textDecoration: \"none\", marginLeft: 10 }}>\r\n                Verified Organizations\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useRef,useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./DesktopMenu.scss\";\nimport xlogo from \"../../assets/images/logo-white.png\";\nimport Modal from \"../Modal/Modal\";\n\nconst DesktopMenu = ({ activeUser, page }) => {\n  const homeInactive = useRef(null);\n  const homeActive = useRef(null);\n  const homeText = useRef(null);\n  const exploreInactive = useRef(null);\n  const exploreActive = useRef(null);\n  const exploreText = useRef(null);\n  const notificationsInactive = useRef(null);\n  const notificationsActive = useRef(null);\n  const notificationsText = useRef(null);\n  const messagesInactive = useRef(null);\n  const messagesActive = useRef(null);\n  const messagesText = useRef(null);\n  const bookmarksInactive = useRef(null);\n  const bookmarksActive = useRef(null);\n  const bookmarksText = useRef(null);\n  const profileInactive = useRef(null);\n  const profileActive = useRef(null);\n  const profileText = useRef(null);\n  const settingsInactive = useRef(null);\n  const settingsActive = useRef(null);\n  const settingsText = useRef(null);\n\n  const navigate = useNavigate();\n\n  const inactiveIcons = [\n    homeInactive,\n    exploreInactive,\n    notificationsInactive,\n    messagesInactive,\n    bookmarksInactive,\n    profileInactive,\n    settingsInactive,\n  ];\n  const activeIcons = [\n    homeActive,\n    exploreActive,\n    notificationsActive,\n    messagesActive,\n    bookmarksActive,\n    profileActive,\n    settingsActive,\n  ];\n  const linksText = [\n    homeText,\n    exploreText,\n    notificationsText,\n    messagesText,\n    bookmarksText,\n    profileText,\n    settingsText,\n  ];\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  // Function to close the modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  useEffect(() => {\n    inactiveIcons.forEach((icon) => {\n      icon.current.dataset.page === page\n        ? (icon.current.style.opacity = 0)\n        : (icon.current.style.opacity = 1);\n    });\n    activeIcons.forEach((icon) => {\n      icon.current.dataset.page === page\n        ? (icon.current.style.opacity = 1)\n        : (icon.current.style.opacity = 0);\n    });\n    linksText.forEach((text) => {\n      text.current.dataset.page === page\n        ? (text.current.style.fontWeight = 700)\n        : (text.current.style.fontWeight = 500);\n    });\n  });\n\n  return (\n    <aside className=\"desktop-menu\">\n      <img src={xlogo} style={{marginLeft:12,width:24}} alt=\"Twitter Logo\" className=\"twitter-logo\" />\n      <Modal isOpen={isModalOpen} onClose={closeModal}/>\n      <nav>\n        <ul>\n          <li className=\"desktop-menu-link-container\">\n            <Link\n              to=\"/home\"\n              aria-label=\"Go to homepage\"\n              className=\"desktop-menu-link\"\n            >\n              <div className=\"svg-container\">\n                <svg\n                  ref={homeInactive}\n                  data-page=\"Home\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"#FFF\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1}\n                    d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n                  />\n                </svg>\n                <svg\n                  ref={homeActive}\n                  data-page=\"Home\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"#FFF\"\n                >\n                  <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n                </svg>\n              </div>\n              <span\n                ref={homeText}\n                data-page=\"Home\"\n                className=\"desktop-link-text\"\n              >\n                Home\n              </span>\n            </Link>\n          </li>\n          <li className=\"desktop-menu-link-container\">\n            <Link\n              to=\"/explore\"\n              aria-label=\"Go to explore page\"\n              className=\"desktop-menu-link\"\n            >\n              <div className=\"svg-container\">\n                <svg\n                  ref={exploreInactive}\n                  data-page=\"Explore\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"#FFF\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1}\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                  />\n                </svg>\n                <svg\n                  ref={exploreActive}\n                  data-page=\"Explore\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"#FFF\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                  />\n                </svg>\n              </div>\n              <span\n                ref={exploreText}\n                data-page=\"Explore\"\n                className=\"desktop-link-text\"\n              >\n                Explore\n              </span>\n            </Link>\n          </li>\n          <li className=\"desktop-menu-link-container\">\n            <Link\n              to=\"/notifications\"\n              aria-label=\"Go to notifications\"\n              className=\"desktop-menu-link\"\n            >\n              <div className=\"svg-container\">\n                <svg\n                  ref={notificationsInactive}\n                  data-page=\"Notifications\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"#FFF\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1}\n                    d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\n                  />\n                </svg>\n                <svg\n                  ref={notificationsActive}\n                  data-page=\"Notifications\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"#FFF\"\n                >\n                  <path d=\"M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z\" />\n                </svg>\n              </div>\n              <span\n                ref={notificationsText}\n                data-page=\"Notifications\"\n                className=\"desktop-link-text\"\n              >\n                Notifications\n              </span>\n            </Link>\n          </li>\n          <li className=\"desktop-menu-link-container\">\n            <Link\n              to=\"/messages\"\n              aria-label=\"Go to messages\"\n              className=\"desktop-menu-link\"\n            >\n              <div className=\"svg-container\">\n                <svg\n                  ref={messagesInactive}\n                  data-page=\"Messages\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"#FFF\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1}\n                    d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                  />\n                </svg>\n                <svg\n                  ref={messagesActive}\n                  data-page=\"Messages\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"#FFF\"\n                >\n                  <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                  <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n                </svg>\n              </div>\n              <span\n                ref={messagesText}\n                data-page=\"Messages\"\n                className=\"desktop-link-text\"\n              >\n                Messages\n              </span>\n            </Link>\n          </li>\n          <li className=\"desktop-menu-link-container\">\n            <Link\n              to={`/${activeUser ? activeUser.username : \"\"}/bookmarks`}\n              aria-label=\"Go to bookmarks\"\n              className=\"desktop-menu-link\"\n            >\n              <div className=\"svg-container\">\n                <svg\n                  ref={bookmarksInactive}\n                  data-page=\"Bookmarks\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"#FFF\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1}\n                    d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\"\n                  />\n                </svg>\n                <svg\n                  ref={bookmarksActive}\n                  data-page=\"Bookmarks\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"#FFF\"\n                >\n                  <path d=\"M5 4a2 2 0 012-2h6a2 2 0 012 2v14l-5-2.5L5 18V4z\" />\n                </svg>\n              </div>\n              <span\n                ref={bookmarksText}\n                data-page=\"Bookmarks\"\n                className=\"desktop-link-text\"\n              >\n                Bookmarks\n              </span>\n            </Link>\n          </li>\n          <li className=\"desktop-menu-link-container\">\n            <Link\n              to=\"\"\n              aria-label=\"Go to profile\"\n              className=\"desktop-menu-link\"\n            >\n              <div className=\"svg-container\">\n              <img src={xlogo} alt=\"xlogo\" style={{width:20}}/>\n              </div>\n              <span\n                ref={profileText}\n                data-page=\"Profile\"\n                className=\"desktop-link-text\"\n                onClick={openModal}\n              >\n                Verified\n              </span>\n            </Link>\n              \n          </li>\n          <li className=\"desktop-menu-link-container\">\n            <Link\n              to={`/${activeUser ? activeUser.username : \"\"}`}\n              aria-label=\"Go to profile\"\n              className=\"desktop-menu-link\"\n            >\n              <div className=\"svg-container\">\n                <svg\n                  ref={profileInactive}\n                  data-page=\"Profile\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"#FFF\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1}\n                    d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                  />\n                </svg>\n                <svg\n                  ref={profileActive}\n                  data-page=\"Profile\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"#FFF\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n              <span\n                ref={profileText}\n                data-page=\"Profile\"\n                className=\"desktop-link-text\"\n              >\n                Profile\n              </span>\n            </Link>\n          </li>\n          <li className=\"desktop-menu-link-container\">\n            <Link\n              to=\"/settings\"\n              aria-label=\"Go to settings\"\n              className=\"desktop-menu-link\"\n            >\n              <div className=\"svg-container\">\n                <svg\n                  ref={settingsInactive}\n                  data-page=\"Settings\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"#FFF\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1}\n                    d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n                  />\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1}\n                    d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                  />\n                </svg>\n                <svg\n                  ref={settingsActive}\n                  data-page=\"Settings\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"#FFF\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n              <span\n                ref={settingsText}\n                data-page=\"Settings\"\n                className=\"desktop-link-text\"\n              >\n                Settings\n              </span>\n            </Link>\n          </li>\n          <li className=\"desktop-menu-link-container\">\n            <Link to=\"/\" aria-label=\"Log out\" className=\"desktop-menu-link\">\n              <div className=\"svg-container\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"#FFF\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={1}\n                    d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                  />\n                </svg>\n              </div>\n              <span className=\"desktop-link-text\">Log Out</span>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <button className=\"tweet-btn\" onClick={() => navigate(\"/compose/tweet\")} style={{fontFamily:'Roboto',fontWeight:500}}>\n        Post\n      </button>\n      <button\n        className=\"tablet-tweet-btn\"\n        onClick={() => navigate(\"/compose/tweet\")}\n      >\n        +\n      </button>\n    </aside>\n  );\n};\n\nexport default DesktopMenu;\n","import React, { useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport './MobileFooterMenu.scss';\n\nconst MobileFooterMenu = ({ page }) => {\n\n    const homeInactive = useRef(null);\n    const homeActive = useRef(null);\n    const exploreInactive = useRef(null);\n    const exploreActive = useRef(null);\n    const notificationsInactive = useRef(null);\n    const notificationsActive = useRef(null);\n    const messagesInactive = useRef(null);\n    const messagesActive = useRef(null);\n\n    const inactiveIcons = [homeInactive, exploreInactive, notificationsInactive, messagesInactive];\n    const activeIcons = [homeActive, exploreActive, notificationsActive, messagesActive];\n\n    useEffect(() => {\n        inactiveIcons.forEach(icon => {\n            icon.current.dataset.page === page ? icon.current.style.opacity = 0 : icon.current.style.opacity = 1;\n        });\n        activeIcons.forEach(icon => {\n            icon.current.dataset.page === page ? icon.current.style.opacity = 1 : icon.current.style.opacity = 0;\n        });\n    });\n\n    return (\n        <footer className=\"mobile-footer-menu\">\n            <nav>\n                <ul>\n                    <li>\n                        <Link to='/home' aria-label='Link to homepage' className=\"mobile-footer-link\">\n                            <svg ref={homeInactive} data-page=\"home\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#FFF\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n                            </svg>\n                            <svg ref={homeActive} data-page=\"home\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"#FFF\">\n                                <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n                            </svg>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to='/explore' aria-label='Link to explore page' className=\"mobile-footer-link\">\n                            <svg ref={exploreInactive} data-page=\"explore\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#FFF\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                            </svg>\n                            <svg ref={exploreActive} data-page=\"explore\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#FFF\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={3} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                            </svg>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to='/notifications' aria-label='Link to notifications page' className=\"mobile-footer-link\">\n                            <svg ref={notificationsInactive} data-page=\"notifications\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#FFF\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n                            </svg>\n                            <svg ref={notificationsActive} data-page=\"notifications\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"#FFF\">\n                                <path d=\"M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z\" />\n                            </svg>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to='/messages' aria-label='Link to messages-page' className=\"mobile-footer-link\">\n                            <svg ref={messagesInactive} data-page=\"messages\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#FFF\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                            </svg>\n                            <svg ref={messagesActive} data-page=\"messages\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"#FFF\">\n                                <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                                <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n                            </svg>\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        </footer>\n    );\n}\n\nexport default MobileFooterMenu;\n","export default __webpack_public_path__ + \"static/media/default-profile-pic.57d14744.png\";","import React from 'react';\nimport { useNavigate } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport './MobileMenu.scss';\nimport profilePic from '../../assets/images/default-profile-pic.png';\n\nconst MobileMenu = ({ handleMobileMenuToggle, activeUser }) => {\n\n    const navigate = useNavigate();\n\n    const handleProfileClick = () => {\n        navigate(`/${activeUser.username}`);\n    }\n\n    return (\n        <div className=\"mobile-menu\">\n            <div className=\"menu-header\">\n                <span className=\"account-info\">Account Info</span>\n                <button className=\"close-menu\" aria-label=\"Close menu\" onClick={handleMobileMenuToggle}>\n                    <span className=\"hidden\">Close</span>\n                </button>\n            </div>\n            <div className=\"mobile-menu-main\">\n                <div className=\"account-details\">\n                    <div className=\"mobile-menu-profile-link\" onClick={handleProfileClick}>\n                        <img src={profilePic} alt=\"\" className=\"mobile-menu-profile-pic\" />\n                        <span className=\"menu-display-name\">{activeUser ? activeUser.displayName : ''}</span>\n                        <span className=\"menu-username\">@{activeUser ? activeUser.username : ''}</span>\n                    </div>\n                    <div className=\"mobile-menu-network-container\">\n                        <p className=\"mobile-menu-network-detail\" onClick={() => navigate(`/${activeUser.username}/following`)}>\n                            {activeUser ? activeUser.following.length : ''}\n                            <span>Following</span>\n                        </p>\n                        <p className=\"mobile-menu-network-detail\" onClick={() => navigate(`/${activeUser.username}/followers`)}>\n                            {activeUser ? activeUser.followers.length : ''}\n                            <span>Followers</span>\n                        </p>\n                    </div>\n                </div>\n                <div className=\"mobile-menu-links-container\">\n                    <ul>\n                        <li className=\"mobile-menu-link-container\">\n                            <Link to={`/${activeUser ? activeUser.username : ''}`} className=\"mobile-menu-link\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#FFF\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                                </svg>\n                                <span>Profile</span>\n                            </Link>\n                        </li>\n                        <li className=\"mobile-menu-link-container\">\n                            <Link to={`/${activeUser ? activeUser.username : ''}/lists`} className=\"mobile-menu-link\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#FFF\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                                </svg>\n                                <span>Lists</span>\n                            </Link>\n                        </li>\n                        <li className=\"mobile-menu-link-container\">\n                            <Link to={`/${activeUser ? activeUser.username : ''}/topics`} className=\"mobile-menu-link\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#FFF\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z\" />\n                                </svg>\n                                <span>Topics</span>\n                            </Link>\n                        </li>\n                        <li className=\"mobile-menu-link-container\">\n                            <Link to={`/${activeUser ? activeUser.username : ''}/bookmarks`} className=\"mobile-menu-link\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#FFF\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\" />\n                                </svg>\n                                <span>Bookmarks</span>\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"mobile-menu-footer\">\n                <div className=\"mobile-menu-links-container\">\n                    <ul>\n                        <li className=\"mobile-menu-link-container\">\n                            <Link to=\"/settings\" className=\"mobile-menu-link\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#FFF\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                                </svg>\n                                <span>Settings and Privacy</span>\n                            </Link>\n                        </li>\n                        <li className=\"mobile-menu-link-container\">\n                            <a href=\"https://help.twitter.com/en\" target=\"_blank\" rel=\"noreferrer\" className=\"mobile-menu-link\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#FFF\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                </svg>\n                                <span>Help Center</span>\n                            </a>\n                        </li>\n                        <li className=\"mobile-menu-link-container\">\n                            <Link to=\"/\" className=\"mobile-menu-link\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#FFF\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                                </svg>\n                                <span>Log Out</span>\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MobileMenu;\n","import React, { useState, useEffect, useRef } from 'react';\nimport MobileMenu from '../MobileMenu/MobileMenu';\nimport './MobileHeader.scss';\n\nconst MobileHeader = ({ page, activeUser }) => {\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const menuContainer = useRef(null);\n    const overlay = useRef(null);\n\n    const handleMobileMenuToggle = () => {\n        setMenuOpen(menuOpen => !menuOpen);\n    }\n\n    useEffect(() => {\n        if (menuOpen) {\n            menuContainer.current.classList.add('menu-open');\n            overlay.current.classList.add('overlay-active');\n        } else {\n            menuContainer.current.classList.remove('menu-open');\n            overlay.current.classList.remove('overlay-active');\n        }\n    }, [menuOpen]);\n\n    return (\n        <div className=\"mobile-header-menu-container\">\n            <header>\n                <button className=\"header-profile-pic\" aria-label=\"Open menu\" onClick={handleMobileMenuToggle}>\n                    <span className=\"hidden\">MENU</span>\n                </button>\n                <h1>{page}</h1>\n            </header>\n            <div className=\"mobile-menu-container\" ref={menuContainer}>\n                <MobileMenu handleMobileMenuToggle={handleMobileMenuToggle} activeUser={activeUser} />\n            </div>\n            <div className=\"overlay\" ref={overlay}></div>\n        </div>\n    );\n}\n\nexport default MobileHeader;\n","import React from 'react';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport MobileHeader from '../../components/MobileHeader/MobileHeader';\n\nconst Explore = ({ activeUser }) => {\n    return (\n        <div>\n            <MobileHeader page=\"Explore\" activeUser={activeUser} />\n            <DesktopMenu activeUser={activeUser} page=\"Explore\" />\n            <MobileFooterMenu page=\"explore\" />\n        </div>\n    );\n}\n\nexport default Explore;\n","export default __webpack_public_path__ + \"static/media/twitter-logo.8b4fb8a5.png\";","import React from 'react';\nimport { useNavigate } from 'react-router';\nimport './AuthHeader.scss';\nimport twitterLogo from '../../assets/images/twitter-logo.png';\n\nconst AuthHeader = () => {\n    \n    const navigate = useNavigate();\n\n    const handleClose = () => {\n        navigate('/');\n    }\n\n    return (\n        <header className=\"authheader\">\n            <button className=\"close\" aria-label=\"Go back to previous screen\" onClick={handleClose}>\n                <span className=\"hidden\">Back</span>\n            </button>\n            <img src={twitterLogo} alt=\"Twitter logo\" className=\"logo\" />\n        </header>\n    );\n}\n\nexport default AuthHeader;\n","import axios from 'axios';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ForgotPassword.scss';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\n\nconst ForgotPassword = () => {\n\n    const [userDetail, setUserDetail] = useState('');\n    const [disabled, setDisabled] = useState(true);\n    const [emailSent, setEmailSent] = useState(false);\n\n    const userDetailElement = useRef();\n    const userDetailErrorMessage = useRef();\n\n    const handleUserDetailChange = e => {\n        setUserDetail(e.target.value);\n    }\n\n    useEffect(() => {\n        if (userDetail.trim() === '') {\n            setDisabled(true);\n        } else {\n            setDisabled(false);\n        }\n    }, [userDetail]);\n\n    const handlePasswordReset = e => {\n        e.preventDefault();\n\n        axios.post('http://localhost:5000/api/auth/forgot-password', { userDetail: userDetail })\n            .then(res => {\n                if (res.status === 200) {\n                    userDetailElement.current.style.border = '1px solid #303237';\n                    userDetailErrorMessage.current.style.display = 'none';\n                    setEmailSent(true);\n                }\n            }).catch(err => {\n                if (err.response.status === 404) {\n                    userDetailElement.current.style.border = '1px solid red';\n                    userDetailErrorMessage.current.style.display = 'block';\n                } else {\n                    console.log('Unknown error');\n                }\n            });\n    }\n\n    return (\n        <div className=\"forgot-password\">\n            <div className=\"forgot-password-wrapper\">\n                <AuthHeader />\n                <main>\n                    <h1>Forgot Password</h1>\n                    <form onSubmit={handlePasswordReset}>\n                        <input type=\"text\" name=\"user\" placeholder=\"Enter username or email\" value={userDetail}\n                            onChange={handleUserDetailChange} ref={userDetailElement} />\n                        <span className=\"error-message\" ref={userDetailErrorMessage}>Invalid email or username.</span>\n                        <input type=\"submit\" value=\"Send Reset Link\" disabled={disabled} />\n                    </form>\n                    {emailSent === false ? null :\n                        <span className=\"email-sent\">\n                            An email with the password reset link has been sent to your email address.\n                        </span>\n                    }\n                    <div className=\"no-account\">\n                        Don't have an account?&nbsp;\n                        <Link to='/signup' className=\"signup-link\">Sign up</Link>\n                    </div>\n                </main>\n            </div>\n        </div>\n    );\n}\n\nexport default ForgotPassword;\n","import React, { useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router';\nimport './TweetFooter.scss';\n\nconst TweetFooter = ({ \n    tweet, \n    user, \n    activeUser, \n    handleLike, \n    handleUnlike, \n    handleRetweet, \n    handleRemoveRetweet, \n    handleShareTweet \n}) => {\n\n    const likeButton = useRef(null);\n    const retweetButton = useRef(null);\n    const navigate = useNavigate();\n\n    const checkLiked = () => {\n        const userLikes = activeUser.likes;\n        const liked = userLikes.includes(tweet._id);\n        return liked;\n    }\n\n    const checkRetweeted = () => {\n        const userRetweets = activeUser.retweets;\n        const retweeted = userRetweets.includes(tweet._id);\n        return retweeted;\n    }\n\n    useEffect(() => {\n        const liked = checkLiked();\n        if (liked) {\n            likeButton.current.classList.add('liked');\n        } else {\n            likeButton.current.classList.remove('liked');\n        }\n\n        const retweeted = checkRetweeted();\n        if (retweeted) {\n            retweetButton.current.classList.add('retweeted');\n        } else {\n            retweetButton.current.classList.remove('retweeted');\n        }\n    });\n\n    const handleLikeEvent = () => {\n        const liked = checkLiked();\n        if (liked) {\n            handleUnlike(tweet._id);\n        } else {\n            handleLike(tweet._id);\n        }\n    }\n\n    const handleRetweetEvent = () => {\n        const retweeted = checkRetweeted();\n        if (retweeted) {\n            handleRemoveRetweet(tweet._id);\n        } else {\n            handleRetweet(tweet._id);\n        }\n    }\n\n    return (\n        <div className=\"tweet-footer\">\n            <button \n                className=\"tweet-action reply-button\" \n                aria-label=\"Reply to tweet\"\n                onClick={() => navigate(`/${user.username}/status/${tweet._id}/reply`)}\n            >\n                {tweet.replies.length}\n            </button>\n            <button \n                className=\"tweet-action retweet-button\" \n                aria-label=\"Retweet\"\n                onClick={handleRetweetEvent}\n                ref={retweetButton}\n            >\n                {tweet.retweets.length}\n            </button>\n            <button \n                className=\"tweet-action like-button\" \n                aria-label=\"Like tweet\"\n                onClick={handleLikeEvent}\n                ref={likeButton}\n            >\n                {tweet.likes.length}\n            </button>\n            <button className=\"share-button\" aria-label=\"Share\" onClick={() => handleShareTweet(tweet, user)}>\n                <span className=\"hidden\">Share</span>\n            </button>\n        </div>\n    );\n}\n\nexport default TweetFooter;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport './Tweet.scss';\nimport profilePic from '../../assets/images/default-profile-pic.png';\nimport TweetFooter from '../TweetFooter/TweetFooter';\n\nconst Tweet = ({ \n    tweet, \n    user, \n    activeUser, \n    handleLike, \n    handleUnlike, \n    handleRetweet, \n    handleRemoveRetweet, \n    handleTweetOptions,\n    handleShareTweet,\n    }) => {\n\n    const [originalTweetUsername, setOriginalTweetUsername] = useState(null);\n    const navigate = useNavigate();\n    \n    const displayDate = () => {\n        const tweetTime = new Date(tweet.createdAt);\n        const difference = (Date.now() - tweetTime) / (1000 * 60);\n        \n        if (difference < 1) {\n            return `${(difference * 60).toFixed(0)}s`;\n        } else if (difference < 60) {\n            return `${difference.toFixed(0)}m`;\n        } else if (difference < 1440) {\n            return `${(difference / 60).toFixed(0)}h`;\n        } else if (difference < 10080) {\n            return `${(difference / (60 * 24)).toFixed(0)}d`;\n        } else {\n            return tweetTime.toLocaleDateString('en-AU');\n        }\n    }\n\n    const getOriginalTweetUser = async () => {\n        try {\n            const tweetRes = await fetch(`http://localhost:5000/api/tweets/${tweet.replyTo}`);\n            const originalTweet = await tweetRes.json();\n            const userRes = await fetch(`http://localhost:5000/api/users/${originalTweet.userId}`);\n            const user = await userRes.json();\n            setOriginalTweetUsername(user.username);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        if (tweet.reply) {\n            getOriginalTweetUser();\n        }\n    });\n\n    return (\n        <div className=\"tweet\">\n            <img className=\"tweet-profile-pic\" src={profilePic} alt=\"\" onClick={() => navigate(`/${user.username}`)} />\n            <div className=\"main-tweet-content\">\n                <div className=\"tweet-header\">\n                    <div className=\"tweet-header-main-container\">\n                        <div className=\"tweet-header-main\">\n                            <span \n                                className=\"tweet-user-name\" \n                                onClick={() => navigate(`/${user.username}`)}\n                            >{user ? user.displayName : ''}</span>\n                            <span \n                                className=\"tweet-user-username\" \n                                onClick={() => navigate(`/${user.username}`)}\n                            >{user ? `@${user.username}` : ''}</span>\n                            <div className=\"separator\"></div>\n                            <span className=\"tweet-time\">{displayDate()}</span>\n                        </div>\n                        <div className=\"reply-info\">\n                            {tweet.reply && originalTweetUsername ? \n                                <p>Replying to <span>@{originalTweetUsername}</span></p> \n                            : null}\n                        </div>\n                    </div>\n                    <div className=\"options-container\">\n                        {\n                            activeUser._id !== tweet.userId ? null :\n                                <button className=\"options\" onClick={() => handleTweetOptions(tweet)}>\n                                    <span className=\"hidden\">Options</span>\n                                </button>\n                        }\n                    </div>\n                </div>\n                <div className=\"tweet-main\" onClick={() => navigate(`/${user.username}/status/${tweet._id}`)}>{tweet.text}</div>\n                <TweetFooter\n                    tweet={tweet}\n                    user={user}\n                    activeUser={activeUser} \n                    handleLike={handleLike} \n                    handleUnlike={handleUnlike} \n                    handleRetweet={handleRetweet} \n                    handleRemoveRetweet={handleRemoveRetweet}\n                    handleShareTweet={handleShareTweet}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Tweet;\n","import React, { useState } from 'react';\nimport './TweetOptions.scss';\n\nconst TweetOptions = ({ handleOptionsView, tweet, handleDeleteTweet, handleDeleteReply }) => {\n\n    const [confirmationModalDisplay, setConfirmationModalDisplay] = useState(false);\n\n    const handleConfirmationDisplayToggle = () => {\n        setConfirmationModalDisplay(display => !display);\n    }\n\n    const handleDeleteTweetEvent = () => {\n        if (tweet.reply) {\n            handleDeleteReply(tweet.replyTo, tweet._id);\n        } else {\n            handleDeleteTweet(tweet._id);\n        }\n        handleConfirmationDisplayToggle();\n        handleOptionsView();\n    }\n\n    return (\n        <div className=\"tweet-options\">\n            <ul>\n                <li>\n                    <button className=\"tweet-option\" onClick={handleConfirmationDisplayToggle}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#E03B39\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                        </svg>\n                        <span className=\"delete-tweet\">Delete</span>\n                    </button>\n                </li>\n                <li>\n                    <button className=\"tweet-option\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n                        </svg>\n                        <span>Edit Tweet</span>\n                    </button>\n                </li>\n                <li>\n                    <button className=\"tweet-option\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\" />\n                        </svg>\n                        <span>Embed Tweet</span>\n                    </button>\n                </li>\n            </ul>\n            <button className=\"cancel-options\" onClick={handleOptionsView}>Cancel</button>\n            {confirmationModalDisplay === false ? null :\n                <div className=\"delete-tweet-confirmation\">\n                    <span>Are you sure you want to delete your tweet?</span>\n                    <div className=\"delete-tweet-action-buttons\">\n                        <button className=\"cancel-delete-tweet\" onClick={handleConfirmationDisplayToggle}>Cancel</button>\n                        <button className=\"delete-tweet-btn\" onClick={handleDeleteTweetEvent}>Delete</button>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default TweetOptions;\n","import React from 'react';\nimport './Overlay.scss';\n\nconst Overlay = () => {\n    return (\n        <div className=\"overlay\"></div>\n    );\n}\n\nexport default Overlay;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './NewTweetButton.scss';\n\nconst NewTweetButton = () => {\n\n    const navigate = useNavigate();\n\n    return (\n        <button className=\"new-tweet-btn\" aria-label=\"New tweet\" onClick={() => navigate('/compose/tweet')}>+</button>\n    );\n}\n\nexport default NewTweetButton;\n","import React from 'react';\nimport './ShareTweet.scss';\n\nconst ShareTweet = ({ tweet, user, activeUser, handleShareView, handleBookmark, handleRemoveBookmark }) => {\n\n    const handleBookmarkEvent = () => {\n        if (activeUser.bookmarks.includes(tweet._id)) {\n            handleRemoveBookmark(tweet._id);\n        } else {\n            handleBookmark(tweet._id);\n        }\n        handleShareView();\n    }\n\n    const handleCopyLink = async () => {\n        await navigator.clipboard.writeText(`http://localhost:3000/${user.username}/status/${tweet._id}`);\n        handleShareView();\n        window.alert('Link copied to clipboard');\n    }\n\n    return (\n        <div className='share-tweet'>\n            <ul>\n                <li>\n                    <button className=\"share-option\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                        </svg>\n                        <span className=\"share-text\">Send via Direct Message</span>\n                    </button>\n                </li>\n                <li>\n                    <button className=\"share-option\" onClick={handleBookmarkEvent}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\" />\n                        </svg>\n                        <span className=\"share-text\">\n                            {activeUser.bookmarks.includes(tweet._id) ? 'Remove Tweet from Bookmarks' : 'Bookmark'}\n                        </span>\n                    </button>\n                </li>\n                <li>\n                    <button className=\"share-option\" onClick={handleCopyLink}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\" />\n                        </svg>\n                        <span className=\"share-text\">Copy Link to Tweet</span>\n                    </button>\n                </li>\n            </ul>\n            <button className=\"cancel-share\" onClick={handleShareView}>Cancel</button>\n        </div>\n    );\n}\n\nexport default ShareTweet;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Home.scss\";\nimport profilePic from \"../../assets/images/default-profile-pic.png\";\nimport MobileFooterMenu from \"../../components/MobileFooterMenu/MobileFooterMenu\";\nimport MobileHeader from \"../../components/MobileHeader/MobileHeader\";\nimport Tweet from \"../../components/Tweet/Tweet\";\nimport TweetOptions from \"../../components/TweetOptions/TweetOptions\";\nimport Overlay from \"../../components/Overlay/Overlay\";\nimport NewTweetButton from \"../../components/NewTweetButton/NewTweetButton\";\nimport ShareTweet from \"../../components/ShareTweet/ShareTweet\";\nimport DesktopMenu from \"../../components/DesktopMenu/DesktopMenu\";\n\nconst Home = ({\n  activeUser,\n  handleNewTweet,\n  handleLike,\n  handleUnlike,\n  handleRetweet,\n  handleRemoveRetweet,\n  handleDeleteTweet,\n  handleBookmark,\n  handleRemoveBookmark,\n}) => {\n  const [tweets, setTweets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [newTweetText, setNewTweetText] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [optionsDisplay, setOptionsDisplay] = useState(false);\n  const [tweetOptions, setTweetOptions] = useState(null);\n  const [shareDisplay, setShareDisplay] = useState(false);\n  const [tweetShare, setTweetShare] = useState(null);\n\n  useEffect(() => {\n    if (activeUser) {\n      axios\n        .get(\"http://localhost:5000/api/tweets/timeline/all\", {\n          userId: activeUser._id,\n        })\n        .then((res) => setTweets(res.data))\n        .catch((err) => console.log(err));\n    }\n  }, [activeUser]);\n\n  useEffect(() => {\n    const allUsers = [];\n    tweets.forEach((tweet) => {\n      axios\n        .get(`http://localhost:5000/api/users/${tweet.userId}`)\n        .then((res) => {\n          allUsers.push(res.data);\n          // Adapted from @Arun Saini https://stackoverflow.com/questions/15125920/how-to-get-distinct-values-from-an-array-of-objects-in-javascript\n          const uniqueUsers = [\n            ...new Map(\n              allUsers.map((user) => [user[\"username\"], user])\n            ).values(),\n          ];\n          setUsers(uniqueUsers);\n        })\n        .catch((err) => console.log(err));\n    });\n  }, [tweets]);\n\n  useEffect(() => {\n    if (newTweetText.trim() === \"\" || newTweetText.trim().length > 280) {\n      setDisabled(true);\n    } else {\n      setDisabled(false);\n    }\n  }, [newTweetText]);\n\n  const handleNewTweetTextChange = (e) => {\n    setNewTweetText(e.target.value);\n\n    e.target.style.height = \"auto\";\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  };\n\n  const handleNewTweetClick = () => {\n    handleNewTweet(newTweetText);\n    setNewTweetText(\"\");\n  };\n\n  const handleTweetOptionsEvent = (tweet) => {\n    setTweetOptions(tweet);\n    handleOptionsView();\n  };\n\n  const handleOptionsView = () => {\n    setOptionsDisplay((display) => !display);\n  };\n\n  const handleShareTweetEvent = (tweet, user) => {\n    setTweetShare({ tweet: tweet, user: user });\n    handleShareView();\n  };\n\n  const handleShareView = () => {\n    setShareDisplay((display) => !display);\n  };\n\n  const sortedTweets = tweets.sort((a, b) => {\n    return new Date(b.createdAt) - new Date(a.createdAt);\n  });\n\n  const tweetsDisplay = sortedTweets.map((tweet) => {\n    const user = users.find((user) => user._id === tweet.userId);\n\n    return (\n      <Tweet\n        key={tweet._id}\n        tweet={tweet}\n        user={user ? user : {}}\n        activeUser={activeUser}\n        handleLike={handleLike}\n        handleUnlike={handleUnlike}\n        handleRetweet={handleRetweet}\n        handleRemoveRetweet={handleRemoveRetweet}\n        handleTweetOptions={handleTweetOptionsEvent}\n        handleShareTweet={handleShareTweetEvent}\n      />\n    );\n  });\n\n  return (\n    <div className=\"home\">\n      <div className=\"home-wrapper\">\n        <MobileHeader page=\"Home\" activeUser={activeUser} />\n        <main className=\"home-main\">\n          <DesktopMenu activeUser={activeUser} page=\"Home\" />\n          <div className=\"tweets-container\">\n            <div className=\"desktop-heading-container\">\n              <span className=\"desktop-heading\">Home</span>\n            </div>\n            <div className=\"desktop-new-tweet-container\">\n              <div className=\"flex-container\">\n                <img\n                  src={profilePic}\n                  alt=\"\"\n                  className=\"new-tweet-profile-pic\"\n                />\n                <textarea\n                  placeholder=\"What's happening?\"\n                  value={newTweetText}\n                  onChange={handleNewTweetTextChange}\n                />\n              </div>\n              <div className=\"desktop-new-tweet-btn-container\">\n                <div\n                  style={{\n                    width: 150,\n                    height: 40,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                  }}\n                >\n                  <div style={{ width: 20, height: 40, cursor: \"pointer\" }}>\n                    <svg\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n                      <g\n                        id=\"SVGRepo_tracerCarrier\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                      ></g>\n                      <g id=\"SVGRepo_iconCarrier\">\n                        {\" \"}\n                        <path\n                          fill-rule=\"evenodd\"\n                          clip-rule=\"evenodd\"\n                          d=\"M23 4C23 2.34315 21.6569 1 20 1H4C2.34315 1 1 2.34315 1 4V20C1 21.6569 2.34315 23 4 23H20C21.6569 23 23 21.6569 23 20V4ZM21 4C21 3.44772 20.5523 3 20 3H4C3.44772 3 3 3.44772 3 4V20C3 20.5523 3.44772 21 4 21H20C20.5523 21 21 20.5523 21 20V4Z\"\n                          fill=\"#ffffff\"\n                        ></path>{\" \"}\n                        <path\n                          d=\"M4.80665 17.5211L9.1221 9.60947C9.50112 8.91461 10.4989 8.91461 10.8779 9.60947L14.0465 15.4186L15.1318 13.5194C15.5157 12.8476 16.4843 12.8476 16.8682 13.5194L19.1451 17.5039C19.526 18.1705 19.0446 19 18.2768 19H5.68454C4.92548 19 4.44317 18.1875 4.80665 17.5211Z\"\n                          fill=\"#ffffff\"\n                        ></path>{\" \"}\n                        <path\n                          d=\"M18 8C18 9.10457 17.1046 10 16 10C14.8954 10 14 9.10457 14 8C14 6.89543 14.8954 6 16 6C17.1046 6 18 6.89543 18 8Z\"\n                          fill=\"#ffffff\"\n                        ></path>{\" \"}\n                      </g>\n                    </svg>\n                  </div>\n                  <div\n                    style={{\n                      width: 20,\n                      height: 40,\n                      marginLeft: 7,\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    <svg\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n                      <g\n                        id=\"SVGRepo_tracerCarrier\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                      ></g>\n                      <g id=\"SVGRepo_iconCarrier\">\n                        {\" \"}\n                        <path\n                          d=\"M17.61 21.71H6.39C5.29996 21.71 4.25456 21.277 3.48379 20.5062C2.71302 19.7354 2.28 18.69 2.28 17.6V6.38C2.28 5.28996 2.71302 4.24457 3.48379 3.4738C4.25456 2.70302 5.29996 2.27 6.39 2.27H17.61C18.7 2.27 19.7454 2.70302 20.5162 3.4738C21.287 4.24457 21.72 5.28996 21.72 6.38V17.6C21.72 18.69 21.287 19.7354 20.5162 20.5062C19.7454 21.277 18.7 21.71 17.61 21.71ZM6.39 3.77C5.69778 3.77 5.03392 4.04499 4.54445 4.53446C4.05498 5.02393 3.78 5.68779 3.78 6.38V17.6C3.78 18.2922 4.05498 18.9561 4.54445 19.4456C5.03392 19.935 5.69778 20.21 6.39 20.21H17.61C18.3022 20.21 18.9661 19.935 19.4555 19.4456C19.945 18.9561 20.22 18.2922 20.22 17.6V6.38C20.22 5.68779 19.945 5.02393 19.4555 4.53446C18.9661 4.04499 18.3022 3.77 17.61 3.77H6.39Z\"\n                          fill=\"#ffffff\"\n                        ></path>{\" \"}\n                        <path\n                          d=\"M7.86 14.9C7.09087 14.9 6.35325 14.5945 5.80939 14.0506C5.26553 13.5068 4.96 12.7691 4.96 12C4.96 11.2309 5.26553 10.4933 5.80939 9.9494C6.35325 9.40554 7.09087 9.10001 7.86 9.10001C8.05891 9.10001 8.24968 9.17902 8.39033 9.31968C8.53098 9.46033 8.61 9.65109 8.61 9.85001C8.61 10.0489 8.53098 10.2397 8.39033 10.3803C8.24968 10.521 8.05891 10.6 7.86 10.6C7.61706 10.6014 7.37866 10.6659 7.16823 10.7873C6.9578 10.9087 6.78259 11.0828 6.65981 11.2924C6.53703 11.5021 6.47091 11.74 6.46796 11.983C6.465 12.2259 6.52531 12.4654 6.64296 12.6779C6.76061 12.8905 6.93154 13.0688 7.13895 13.1953C7.34637 13.3218 7.58313 13.3921 7.82596 13.3994C8.06879 13.4066 8.30934 13.3506 8.52395 13.2367C8.73856 13.1229 8.91985 12.9551 9.05 12.75H8.59C8.39109 12.75 8.20032 12.671 8.05967 12.5303C7.91902 12.3897 7.84 12.1989 7.84 12C7.84 11.8011 7.91902 11.6103 8.05967 11.4697C8.20032 11.329 8.39109 11.25 8.59 11.25H10C10.1981 11.2526 10.3874 11.3324 10.5275 11.4725C10.6676 11.6126 10.7474 11.8019 10.75 12C10.7474 12.7666 10.4424 13.5012 9.90125 14.0442C9.36012 14.5872 8.62658 14.8947 7.86 14.9Z\"\n                          fill=\"#ffffff\"\n                        ></path>{\" \"}\n                        <path\n                          d=\"M12.65 14.89C12.5511 14.8914 12.453 14.8729 12.3614 14.8357C12.2698 14.7984 12.1866 14.7433 12.1167 14.6733C12.0468 14.6034 11.9916 14.5202 11.9544 14.4286C11.9171 14.337 11.8987 14.2389 11.9 14.14V9.84001C11.9 9.6411 11.979 9.45033 12.1197 9.30968C12.2603 9.16903 12.4511 9.09001 12.65 9.09001C12.8489 9.09001 13.0397 9.16903 13.1803 9.30968C13.321 9.45033 13.4 9.6411 13.4 9.84001V14.14C13.4 14.3389 13.321 14.5297 13.1803 14.6703C13.0397 14.811 12.8489 14.89 12.65 14.89Z\"\n                          fill=\"#ffffff\"\n                        ></path>{\" \"}\n                        <path\n                          d=\"M15.33 14.9C15.1319 14.8974 14.9426 14.8176 14.8025 14.6775C14.6624 14.5374 14.5826 14.3481 14.58 14.15V9.85001C14.58 9.65109 14.659 9.46033 14.7997 9.31968C14.9403 9.17902 15.1311 9.10001 15.33 9.10001C15.5289 9.10001 15.7197 9.17902 15.8603 9.31968C16.001 9.46033 16.08 9.65109 16.08 9.85001V14.15C16.08 14.2485 16.0606 14.346 16.0229 14.437C15.9852 14.528 15.93 14.6107 15.8603 14.6803C15.7907 14.75 15.708 14.8052 15.617 14.8429C15.526 14.8806 15.4285 14.9 15.33 14.9Z\"\n                          fill=\"#ffffff\"\n                        ></path>{\" \"}\n                        <path\n                          d=\"M17.93 12.81H15.33C15.1311 12.81 14.9403 12.731 14.7997 12.5903C14.659 12.4497 14.58 12.2589 14.58 12.06C14.58 11.8611 14.659 11.6703 14.7997 11.5297C14.9403 11.389 15.1311 11.31 15.33 11.31H17.93C18.1289 11.31 18.3197 11.389 18.4603 11.5297C18.601 11.6703 18.68 11.8611 18.68 12.06C18.68 12.2589 18.601 12.4497 18.4603 12.5903C18.3197 12.731 18.1289 12.81 17.93 12.81Z\"\n                          fill=\"#ffffff\"\n                        ></path>{\" \"}\n                        <path\n                          d=\"M17.93 10.6H15.33C15.1311 10.6 14.9403 10.521 14.7997 10.3803C14.659 10.2397 14.58 10.0489 14.58 9.85001C14.58 9.65109 14.659 9.46033 14.7997 9.31968C14.9403 9.17902 15.1311 9.10001 15.33 9.10001H17.93C18.1289 9.10001 18.3197 9.17902 18.4603 9.31968C18.601 9.46033 18.68 9.65109 18.68 9.85001C18.68 10.0489 18.601 10.2397 18.4603 10.3803C18.3197 10.521 18.1289 10.6 17.93 10.6Z\"\n                          fill=\"#ffffff\"\n                        ></path>{\" \"}\n                      </g>\n                    </svg>\n                  </div>\n                  <div\n                    style={{\n                      width: 20,\n                      height: 40,\n                      marginLeft: 7,\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    <svg\n                      viewBox=\"0 0 64 64\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      stroke-width=\"3\"\n                      stroke=\"#ffffff\"\n                      fill=\"none\"\n                    >\n                      <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n                      <g\n                        id=\"SVGRepo_tracerCarrier\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                      ></g>\n                      <g id=\"SVGRepo_iconCarrier\">\n                        <path d=\"M36.66,54.45H8.84A2.5,2.5,0,0,1,6.35,52V12.12A2.49,2.49,0,0,1,8.84,9.63H48.68a2.49,2.49,0,0,1,2.49,2.49v22.4\"></path>\n                        <line x1=\"6.35\" y1=\"20.63\" x2=\"51.17\" y2=\"20.63\"></line>\n                        <line x1=\"16.46\" y1=\"9.63\" x2=\"16.46\" y2=\"4.63\"></line>\n                        <line x1=\"40.42\" y1=\"9.63\" x2=\"40.42\" y2=\"4.63\"></line>\n                        <circle cx=\"45.22\" cy=\"45.44\" r=\"12.43\"></circle>\n                        <polyline points=\"45.22 36.7 45.22 45.82 49.57 49.16\"></polyline>\n                      </g>\n                    </svg>\n                  </div>\n                  <div\n                    style={{\n                      width: 20,\n                      height: 40,\n                      marginLeft: 7,\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    <svg\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n                      <g\n                        id=\"SVGRepo_tracerCarrier\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                      ></g>\n                      <g id=\"SVGRepo_iconCarrier\">\n                        {\" \"}\n                        <path\n                          d=\"M9 16C9.85038 16.6303 10.8846 17 12 17C13.1154 17 14.1496 16.6303 15 16\"\n                          stroke=\"#ffffff\"\n                          stroke-width=\"1.5\"\n                          stroke-linecap=\"round\"\n                        ></path>{\" \"}\n                        <path\n                          d=\"M16 10.5C16 11.3284 15.5523 12 15 12C14.4477 12 14 11.3284 14 10.5C14 9.67157 14.4477 9 15 9C15.5523 9 16 9.67157 16 10.5Z\"\n                          fill=\"#ffffff\"\n                        ></path>{\" \"}\n                        <ellipse\n                          cx=\"9\"\n                          cy=\"10.5\"\n                          rx=\"1\"\n                          ry=\"1.5\"\n                          fill=\"#ffffff\"\n                        ></ellipse>{\" \"}\n                        <path\n                          d=\"M7 3.33782C8.47087 2.48697 10.1786 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 10.1786 2.48697 8.47087 3.33782 7\"\n                          stroke=\"#ffffff\"\n                          stroke-width=\"1.5\"\n                          stroke-linecap=\"round\"\n                        ></path>{\" \"}\n                      </g>\n                    </svg>\n                  </div>\n                  <div\n                    style={{\n                      width: 20,\n                      height: 40,\n                      marginLeft: 7,\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    <svg\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      stroke=\"#ffffff\"\n                    >\n                      <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n                      <g\n                        id=\"SVGRepo_tracerCarrier\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                      ></g>\n                      <g id=\"SVGRepo_iconCarrier\">\n                        {\" \"}\n                        <path\n                          d=\"M12 21C15.5 17.4 19 14.1764 19 10.2C19 6.22355 15.866 3 12 3C8.13401 3 5 6.22355 5 10.2C5 14.1764 8.5 17.4 12 21Z\"\n                          stroke=\"#ffffff\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                        ></path>{\" \"}\n                        <path\n                          d=\"M12 13C13.6569 13 15 11.6569 15 10C15 8.34315 13.6569 7 12 7C10.3431 7 9 8.34315 9 10C9 11.6569 10.3431 13 12 13Z\"\n                          stroke=\"#ffffff\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                        ></path>{\" \"}\n                      </g>\n                    </svg>\n                  </div>\n                </div>\n                <button\n                  className=\"desktop-new-tweet-btn\"\n                  disabled={disabled}\n                  onClick={handleNewTweetClick}\n                >\n                  POST\n                </button>\n              </div>\n            </div>\n            {tweets.length > 0 ? tweetsDisplay : null}\n            <div className=\"no-more-tweets\">No more tweets</div>\n          </div>\n          <NewTweetButton />\n          {optionsDisplay === false ? null : (\n            <TweetOptions\n              handleOptionsView={handleOptionsView}\n              tweet={tweetOptions}\n              handleDeleteTweet={handleDeleteTweet}\n            />\n          )}\n          {optionsDisplay || shareDisplay ? <Overlay /> : null}\n          {shareDisplay === false ? null : (\n            <ShareTweet\n              tweet={tweetShare.tweet}\n              user={tweetShare.user}\n              activeUser={activeUser}\n              handleShareView={handleShareView}\n              handleBookmark={handleBookmark}\n              handleRemoveBookmark={handleRemoveBookmark}\n            />\n          )}\n        </main>\n        <MobileFooterMenu page=\"home\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.scss\";\nimport AuthHeader from \"../../components/AuthHeader/AuthHeader\";\n\nconst Login = ({ handleSetActiveUser }) => {\n  const [userLoginDetail, setUserLoginDetail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [emailCompleted, setEmailCompleted] = useState(false);\n\n  const userLoginDetailElement = useRef(null);\n  const userLoginDetailErrorMessage = useRef(null);\n  const passwordElement = useRef(null);\n  const passwordErrorMessage = useRef(null);\n\n  const navigate = useNavigate();\n\n  const handleForgotPassword = () => {\n    navigate(\"/forgot-password\");\n  };\n\n  const handleUserLoginDetailChange = (e) => {\n    setUserLoginDetail(e.target.value);\n    setEmailCompleted(e.target.value.includes('.com'));\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  useEffect(() => {\n    if (userLoginDetail.trim() === \"\" || password.trim() === \"\") {\n      setDisabled(true);\n    } else {\n      setDisabled(false);\n    }\n  }, [userLoginDetail, password]);\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    const user = {\n      userLoginDetail: userLoginDetail,\n      password: password,\n    };\n\n    axios\n      .post(\"http://localhost:5000/api/auth/login\", user)\n      .then((res) => {\n        if (res.status === 200) {\n          userLoginDetailElement.current.style.border = \"1px solid #303237\";\n          userLoginDetailErrorMessage.current.style.display = \"none\";\n          passwordElement.current.style.border = \"1px solid #303237\";\n          passwordErrorMessage.current.style.display = \"none\";\n\n          const user = res.data;\n          handleSetActiveUser(user);\n          navigate(\"/home\");\n        }\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          userLoginDetailElement.current.style.border = \"1px solid red\";\n          userLoginDetailErrorMessage.current.style.display = \"block\";\n          passwordElement.current.style.border = \"1px solid #303237\";\n          passwordErrorMessage.current.style.display = \"none\";\n        } else if (err.response.status === 406) {\n          userLoginDetailElement.current.style.border = \"1px solid #303237\";\n          userLoginDetailErrorMessage.current.style.display = \"none\";\n          passwordElement.current.style.border = \"1px solid red\";\n          passwordErrorMessage.current.style.display = \"block\";\n        } else {\n          console.log(\"Unknown error\");\n        }\n      });\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login-wrapper\">\n        <AuthHeader />\n        <main>\n          <h1>Sign In To Twitter</h1>\n          <form onSubmit={handleLogin}>\n            <input\n              type=\"text\"\n              name=\"userLoginDetail\"\n              placeholder=\"Username or email\"\n              value={userLoginDetail}\n              onChange={handleUserLoginDetailChange}\n              ref={userLoginDetailElement}\n            />\n            <span className=\"error-message\" ref={userLoginDetailErrorMessage}>\n              Invalid username or email.\n            </span>\n\n            {emailCompleted && (\n              <>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={handlePasswordChange}\n                  ref={passwordElement}\n                />\n                <span className=\"error-message\" ref={passwordErrorMessage}>\n                  Incorrect password.\n                </span>\n              </>\n            )}\n            <input type=\"submit\" value=\"Sign In\" disabled={disabled} />\n          </form>\n          <button\n            className=\"forgot-password-btn\"\n            onClick={handleForgotPassword}\n          >\n            Forgot Password?\n          </button>\n          <div className=\"no-account\">\n            Don't have an account?&nbsp;\n            <Link to=\"/signup\" className=\"signup-link\">\n              Sign up\n            </Link>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport MobileHeader from '../../components/MobileHeader/MobileHeader';\n\nconst Messages = ({ activeUser }) => {\n    return (\n        <div>\n            <MobileHeader page=\"Messages\" activeUser={activeUser} />\n            <DesktopMenu activeUser={activeUser} page=\"Messages\" />\n            <MobileFooterMenu page=\"messages\" />\n        </div>\n    );\n}\n\nexport default Messages;\n","import React from 'react';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport MobileHeader from '../../components/MobileHeader/MobileHeader';\n\nconst Notifications = ({ activeUser }) => {\n    return (\n        <div>\n            <MobileHeader page=\"Notifications\" activeUser={activeUser} />\n            <DesktopMenu activeUser={activeUser} page=\"Notifications\" />\n            <MobileFooterMenu page=\"notifications\" />\n        </div>\n    );\n}\n\nexport default Notifications;\n","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router';\nimport './SignUp.scss';\nimport AuthHeader from '../../components/AuthHeader/AuthHeader';\n\nconst SignUp = ({ handleSetActiveUser }) => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [emailAvailable, setEmailAvailable] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmedPassword, setConfirmedPassword] = useState('');\n    const [nextDisabled, setNextDisabled] = useState(true);\n    const [signupDisabled, setSignupDisabled] = useState(true);\n\n    const emailElement = useRef(null);\n    const emailErrorMessage = useRef(null);\n    const usernameElement = useRef(null);\n    const usernameErrorMessage = useRef(null);\n    const confirmedPasswordElement = useRef(null);\n    const confirmedPasswordErrorMessage = useRef(null);\n\n    const navigate = useNavigate();\n\n    const handleEmailChange = e => {\n        setEmail(e.target.value);\n    }\n\n    const handleNameChange = e => {\n        setName(e.target.value);\n    }\n\n    const handleUsernameChange = e => {\n        setUsername(e.target.value);\n    }\n\n    const handlePasswordChange = e => {\n        setPassword(e.target.value);\n    }\n\n    const handleConfirmedPasswordChange = e => {\n        setConfirmedPassword(e.target.value);\n    }\n\n    useEffect(() => {\n        if (name.trim() === '' || email.trim() === '') {\n            setNextDisabled(true);\n        } else {\n            setNextDisabled(false);\n        }\n    }, [name, email]);\n\n    useEffect(() => {\n        if (username.trim() === '' || password.trim() === '' || confirmedPassword.trim() === '') {\n            setSignupDisabled(true);\n        } else {\n            setSignupDisabled(false);\n        }\n    }, [username, password, confirmedPassword]);\n    \n    const handleEmailValidation = e => {\n        e.preventDefault();\n        axios.post('http://localhost:5000/api/auth/signup/email', { email: email })\n            .then(res => {\n                if (res.status === 200) {\n                    emailErrorMessage.current.style.display = 'none';\n                    emailElement.current.style.border = '1px solid #303237';\n                    setEmailAvailable(true);\n                    usernameElement.current.focus();\n                }\n            }).catch(err => {\n                if (err.response.status === 403) {\n                    emailErrorMessage.current.style.display = 'block';\n                    emailElement.current.style.border = '1px solid red';\n                } else {\n                    console.log('Unknown error');\n                }\n            });\n    }\n\n    const handleSignUp = e => {\n        e.preventDefault();\n        if (password !== confirmedPassword) {\n            confirmedPasswordErrorMessage.current.style.display = 'block';\n            confirmedPasswordElement.current.style.border = '1px solid red';\n        } else {\n            confirmedPasswordErrorMessage.current.style.display = 'none';\n            confirmedPasswordElement.current.style.border = '1px solid #303237';\n\n            const user = {\n                email: email,\n                username: username,\n                password: password,\n                displayName: name\n            };\n\n            axios.post('http://localhost:5000/api/auth/signup', user)\n                .then(res => {\n                    if (res.status === 200) {\n                        usernameErrorMessage.current.style.display = 'none';\n                        usernameElement.current.style.border = '1px solid #303237';\n                        \n                        const user = res.data;\n                        handleSetActiveUser(user);\n                        navigate('/home');\n                    }\n                }).catch(err => {\n                    if (err.response.status === 403) {\n                        usernameErrorMessage.current.style.display = 'block';\n                        usernameElement.current.style.border = '1px solid red';\n                    } else {\n                        console.log('Unknown error');\n                    }\n                });\n        }\n    }\n\n    return (\n        <div className=\"signup\">\n            <div className=\"signup-wrapper\">\n                <AuthHeader />\n                <main>\n                    <h1 style={{color:'white'}}>Create Your Account</h1>\n                    {emailAvailable === false ? \n                        <form onSubmit={handleEmailValidation}>\n                            <input type=\"text\" name=\"displayName\" placeholder=\"Name\" \n                                value={name} onChange={handleNameChange} tabIndex={0} />\n                            <input type=\"email\" name=\"email\" placeholder=\"Email\" \n                                value={email} onChange={handleEmailChange} ref={emailElement} tabIndex={1} />\n                            <span className=\"error-message\" ref={emailErrorMessage}>Email has already been taken.</span>\n                            <input className=\"next-btn\" type=\"submit\" value=\"Next\" disabled={nextDisabled} tabIndex={2} />\n                        </form>  \n                        :\n                        <form onSubmit={handleSignUp}>\n                            <input type=\"text\" name=\"username\" placeholder=\"Username\" \n                                value={username} onChange={handleUsernameChange} ref={usernameElement} tabIndex={3} />\n                            <span className=\"error-message\" ref={usernameErrorMessage}>Username already taken.</span>\n                            <input type=\"password\" name=\"password\" placeholder=\"Password\" \n                                value={password} onChange={handlePasswordChange} tabIndex={4} />\n                            <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" \n                                value={confirmedPassword} onChange={handleConfirmedPasswordChange} ref={confirmedPasswordElement}\n                                tabIndex={5} />\n                            <span className=\"error-message\" ref={confirmedPasswordErrorMessage}>Passwords do not match.</span>\n                            <input className=\"signup-btn\" type=\"submit\" value=\"Sign Up\" disabled={signupDisabled} tabIndex={6} />\n                        </form>\n                    }\n                </main>\n            </div>\n        </div>\n    );\n}\n\nexport default SignUp;\n","import React from 'react';\nimport { useNavigate } from 'react-router';\nimport './ComposeTweetHeader.scss';\n\nconst ComposeTweetHeader = ({ disabled, handleNewTweet, handleReply, type, tweetId, text }) => {\n\n    const navigate = useNavigate();\n\n    const handleBackNavigation = () => {\n        navigate(-1);\n    }\n\n    const handleComposeTweet = () => {\n        if (text.trim()) {\n            type === 'Reply' ? handleReply(tweetId, text) : handleNewTweet(text);\n            navigate(-1);\n        }\n    }\n\n    return (\n        <header className=\"compose-tweet-header\">\n            <button className=\"back-btn\" aria-label=\"Go back\" onClick={handleBackNavigation}>\n                <span className=\"hidden\">Back</span>\n            </button>\n            <button className=\"tweet-btn\" onClick={handleComposeTweet} disabled={disabled}>{type}</button>\n        </header>\n    );\n}\n\nexport default ComposeTweetHeader;\n","import React, { useEffect, useRef } from 'react';\nimport './ComposeTweetMain.scss';\nimport profilePic from '../../assets/images/default-profile-pic.png';\n\nconst ComposeTweetMain = ({ text, handleSetDisabled, handleSetText, placeholder }) => {\n\n    const limitWarning = useRef(null);\n\n    useEffect(() => {\n        if (text.trim() === '' || text.trim().length > 280) {\n            handleSetDisabled(true);\n        } else {\n            handleSetDisabled(false);\n        }\n\n        if (text.trim().length > 280) {\n            limitWarning.current.style.display = 'block';\n        } else {\n            limitWarning.current.style.display = 'none';\n        }\n    });\n\n    const handleTweetInputChange = e => {\n        e.target.style.height = 'auto';\n        e.target.style.height = `${e.target.scrollHeight}px`;\n\n        handleSetText(e.target.value);\n    }\n\n    return (\n        <div className=\"compose-tweet-main-container\">\n            <img src={profilePic} alt=\"\" className=\"compose-tweet-profile-pic\" />\n            <div className=\"tweet-input-container\">\n                <textarea \n                    name=\"tweet-text\"\n                    className=\"tweet-input\"\n                    placeholder={placeholder}\n                    value={text}\n                    onChange={handleTweetInputChange}\n                />\n                <span className=\"limit-warning\" ref={limitWarning}>Limit is 280 characters</span>\n            </div>\n        </div>\n    );\n}\n\nexport default ComposeTweetMain;\n","import React, { useState } from 'react';\nimport ComposeTweetHeader from '../../components/ComposeTweetHeader/ComposeTweetHeader';\nimport ComposeTweetMain from '../../components/ComposeTweetMain/ComposeTweetMain';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\n\nconst NewTweet = ({ activeUser, handleNewTweet }) => {\n\n    const [tweetText, setTweetText] = useState('');\n    const [disabled, setDisabled] = useState(true);\n\n    const handleSetDisabled = (boolean) => {\n        setDisabled(boolean)\n    }\n\n    const handleSetTweetText = (val) => {\n        setTweetText(val);\n    }\n\n    return (\n        <div className=\"new-tweet-container\">\n            <ComposeTweetHeader disabled={disabled} handleNewTweet={handleNewTweet} type={'Tweet'} text={tweetText} />\n            <main>\n                <DesktopMenu activeUser={activeUser} page=\"New Tweet\" />\n                <ComposeTweetMain \n                    text={tweetText} \n                    handleSetDisabled={handleSetDisabled} \n                    handleSetText={handleSetTweetText} \n                    placeholder={\"What's happening?\"}\n                />\n            </main>\n        </div>\n    );\n}\n\nexport default NewTweet;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router';\nimport axios from 'axios';\nimport './DetailedTweet.scss';\nimport profilePic from '../../assets/images/default-profile-pic.png';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport TweetOptions from '../../components/TweetOptions/TweetOptions';\nimport Overlay from '../../components/Overlay/Overlay';\nimport ShareTweet from '../../components/ShareTweet/ShareTweet';\nimport Tweet from '../../components/Tweet/Tweet';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\n\nconst DetailedTweet = ({ \n    activeUser, \n    handleLike, \n    handleUnlike, \n    handleRetweet, \n    handleRemoveRetweet,\n    handleReply,\n    handleDeleteReply,\n    handleDeleteTweet,\n    handleBookmark,\n    handleRemoveBookmark\n}) => {\n\n    const { tweetId } = useParams();\n    const [tweet, setTweet] = useState(null);\n    const [user, setUser] = useState(null);\n    const [replyText, setReplyText] = useState('');\n    const [replyBtnDisplay, setReplyBtnDisplay] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [replies, setReplies] = useState([]);\n    const [replyUsers, setReplyUsers] = useState([]);\n    const [optionsDisplay, setOptionsDisplay] = useState(false);\n    const [tweetOptions, setTweetOptions] = useState(null);\n    const [shareDisplay, setShareDisplay] = useState(false);\n    const [tweetShare, setTweetShare] = useState(null);\n    const likeButton = useRef(null);\n    const retweetButton = useRef(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        axios.get(`http://localhost:5000/api/tweets/${tweetId}`)\n            .then(res => setTweet(res.data))\n            .catch(err => console.log(err));\n    }, [tweetId, activeUser]);\n\n    useEffect(() => {\n        if (tweet) {\n            axios.get(`http://localhost:5000/api/users/${tweet.userId}`)\n                .then(res => setUser(res.data))\n                .catch(err => console.log(err));\n            if (tweet.replies.length > 0) {\n                const replies = tweet.replies;\n                const allReplies = [];\n                replies.forEach(replyId => {\n                    axios.get(`http://localhost:5000/api/tweets/${replyId}`)\n                        .then(res => {\n                            allReplies.push(res.data);\n                            setReplies(allReplies);\n                        })\n                        .catch(err => console.log(err));\n                });\n            } else {\n                setReplies([]);\n            }\n        }\n    }, [tweet]);\n\n    useEffect(() => {\n        if (replies.length > 0) {\n            const allReplyUsers = [];\n            replies.forEach(reply => {\n                axios.get(`http://localhost:5000/api/users/${reply.userId}`)\n                    .then(res => {\n                        allReplyUsers.push(res.data);\n                        setReplyUsers(allReplyUsers);\n                    })\n                    .catch(err => console.log(err));\n            });\n        }\n    }, [replies]);\n\n    useEffect(() => {\n        replyText || replyText.length > 280 ? setDisabled(false) : setDisabled(true);\n    }, [replyText]);\n\n    useEffect(() => {\n        if (tweet && activeUser) {\n            const liked = checkLiked();\n            if (liked) {\n                likeButton.current.classList.add('liked');\n            } else {\n                likeButton.current.classList.remove('liked');\n            }\n\n            const retweeted = checkRetweeted();\n            if (retweeted) {\n                retweetButton.current.classList.add('retweeted');\n            } else {\n                retweetButton.current.classList.remove('retweeted');\n            }\n        }\n    });\n\n    const checkLiked = () => {\n        const userLikes = activeUser.likes;\n        const liked = userLikes.includes(tweetId);\n        return liked;\n    }\n\n    const checkRetweeted = () => {\n        const userRetweets = activeUser.retweets;\n        const retweeted = userRetweets.includes(tweetId);\n        return retweeted;\n    }\n\n    const handleLikeEvent = () => {\n        const liked = checkLiked();\n        if (liked) {\n            handleUnlike(tweet._id);\n        } else {\n            handleLike(tweet._id);\n        }\n    }\n\n    const handleRetweetEvent = () => {\n        const retweeted = checkRetweeted();\n        if (retweeted) {\n            handleRemoveRetweet(tweet._id);\n        } else {\n            handleRetweet(tweet._id);\n        }\n    }\n\n    const handleTweetOptionsEvent = (tweet) => {\n        setTweetOptions(tweet);\n        handleOptionsView();\n    }\n\n    const handleOptionsView = () => {\n        setOptionsDisplay(display => !display);\n    }\n\n    const handleShareTweetEvent = (tweet, user) => {\n        setTweetShare({ tweet: tweet, user: user });\n        handleShareView();\n    }\n\n    const handleShareView = () => {\n        setShareDisplay(display => !display);\n    }\n\n    const formatNumber = (num) => {\n        return num < 10 ? `0${num}` : num;\n    }\n\n    const tweetTime = () => {\n        const tweetDateTime = new Date(tweet.createdAt);\n        if (tweetDateTime.getHours() > 12) {\n            return `${tweetDateTime.getHours() - 12}:${formatNumber(tweetDateTime.getMinutes())} PM`;\n        } else {\n            return `${tweetDateTime.getHours()}:${formatNumber(tweetDateTime.getMinutes())} AM`;\n        }\n    }\n\n    const tweetDate = () => {\n        const tweetDateTime = new Date(tweet.createdAt);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        return `${formatNumber(tweetDateTime.getDate())} ${months[tweetDateTime.getMonth()]} ${tweetDateTime.getFullYear()}`;\n    }\n\n    const handleReplyInputChange = (e) => {\n        setReplyText(e.target.value);\n        e.target.style.height = 'auto';\n        e.target.style.height = `${e.target.scrollHeight}px`;\n\n        if (e.target.value === '') {\n            e.target.style.height = '63px';\n        }\n    }\n\n    const handleReplyEvent = () => {\n        if (replyText.trim()) {\n            handleReply(tweetId, replyText);\n            setReplyText('');\n            setReplyBtnDisplay(false);\n        }\n    }\n\n    const repliesDisplay = replies.map(reply => {\n        const replyUser = replyUsers.find(user => user._id === reply.userId);\n\n        return (\n            <Tweet \n                key={reply._id}\n                tweet={reply}\n                user={replyUser ? replyUser : {}}\n                activeUser={activeUser}\n                handleLike={handleLike}\n                handleUnlike={handleUnlike}\n                handleRetweet={handleRetweet}\n                handleRemoveRetweet={handleRemoveRetweet}\n                handleTweetOptions={handleTweetOptionsEvent}\n                handleShareTweet={handleShareTweetEvent}\n            />\n        );\n    });\n\n    return (\n        <div className=\"detailed-tweet\">\n            <header>\n                <button className=\"back\" aria-label=\"Go back\" onClick={() => navigate(-1)}>\n                    <span className=\"hidden\">Back</span>\n                </button>\n                <h1>Tweet</h1>\n            </header>\n            <main>\n                <DesktopMenu activeUser={activeUser} page=\"Detailed Tweet\" />\n                <div className=\"tweet-header\">\n                    <div className=\"tweet-header-main\">\n                        <img src={profilePic} alt=\"\" className=\"profile-pic\" onClick={() => navigate(`/${user.username}`)} />\n                        <div className=\"user-details\" onClick={() => navigate(`/${user.username}`)}>\n                            <span className=\"name\">{user ? user.displayName : null}</span>\n                            <span className=\"username\">@{user ? user.username : null}</span>\n                        </div>\n                    </div>\n                    <div className=\"options-container\">\n                        {   \n                            tweet && activeUser._id !== tweet.userId ? null :\n                                <button className=\"options\" onClick={() => handleTweetOptionsEvent(tweet)}>\n                                    <span className=\"hidden\">Options</span>\n                                </button>\n                        }\n                    </div>\n                </div>\n                <div className=\"tweet-main\">{tweet ? tweet.text : null}</div>\n                <div className=\"tweet-datetime-details\">\n                    <span className=\"tweet-time\">{tweet ? tweetTime() : null}</span>\n                    <div className=\"separator\"></div>\n                    <span className=\"tweet-date\">{tweet ? tweetDate() : null}</span>\n                </div>\n                <div className=\"tweet-interactions-container\">\n                    {tweet ? (tweet.retweets.length > 0 || tweet.likes.length > 0) ? \n                        <div className=\"detailed-tweet-interactions-wrapper\">\n                            <div className=\"detailed-tweet-interactions-container\">\n                            {tweet.retweets.length === 0 ? null :\n                                <div \n                                    className=\"detailed-tweet-interaction-container\"\n                                    onClick={() => navigate(`/${user.username}/status/${tweetId}/retweets`)}\n                                >\n                                    <span className=\"detailed-tweet-interaction-number\">{tweet.retweets.length}</span>\n                                    &nbsp;{tweet.retweets.length > 1 ? 'Retweets' : 'Retweet'}\n                                </div>\n                            }\n                            {tweet.likes.length === 0 ? null : \n                                <div \n                                    className=\"detailed-tweet-interaction-container\"\n                                    onClick={() => navigate(`/${user.username}/status/${tweetId}/likes`)}\n                                >\n                                    <span className=\"detailed-tweet-interaction-number\">{tweet.likes.length}</span>\n                                    &nbsp;{tweet.likes.length > 1 ? 'Likes' : 'Like'}\n                                </div>\n                            }\n                        </div>\n                        </div> : null : null\n                    }\n                    <div className=\"detailed-tweet-footer-container\">\n                        <div className=\"detailed-tweet-footer\">\n                            <button \n                                className=\"tweet-action reply-btn\" \n                                aria-label='Reply to tweet' \n                                onClick={() => navigate(`/${user.username}/status/${tweetId}/reply`)}\n                            >\n                                <span className=\"hidden\">Reply</span>\n                            </button>\n                            <button \n                                className=\"tweet-action retweet-btn\" \n                                aria-label='Retweet' \n                                onClick={handleRetweetEvent}\n                                ref={retweetButton}\n                            >\n                                <span className=\"hidden\">Retweet</span>\n                            </button>\n                            <button \n                                className=\"tweet-action like-btn\" \n                                aria-label='Like tweet' \n                                onClick={handleLikeEvent}\n                                ref={likeButton}\n                            >\n                                <span className=\"hidden\">Like</span>\n                            </button>\n                            <button \n                                className=\"tweet-action share-btn\" \n                                aria-label='Share tweet' \n                                onClick={() => handleShareTweetEvent(tweet, user)}\n                            >\n                                <span className=\"hidden\">Share</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"reply-container\">\n                    <img src={profilePic} alt=\"\" className=\"active-user-profile-pic\"/>\n                    <div className=\"reply-actions-container\">\n                        <textarea \n                            name=\"reply-text\"\n                            className=\"reply-input\"\n                            placeholder=\"Tweet your reply\"\n                            value={replyText}\n                            onChange={handleReplyInputChange}\n                            onFocus={() => setReplyBtnDisplay(true)}\n                        />\n                        {replyBtnDisplay ? \n                            <button className=\"reply-btn\" disabled={disabled} onClick={handleReplyEvent}>Reply</button> \n                        : null}\n                    </div>\n                </div>\n                {replyUsers.length > 0 ? repliesDisplay : null}\n                {optionsDisplay === false ? null :\n                    <TweetOptions \n                        handleOptionsView={handleOptionsView} \n                        tweet={tweetOptions} \n                        handleDeleteTweet={handleDeleteTweet}\n                        handleDeleteReply={handleDeleteReply}\n                    />\n                }\n                {optionsDisplay || shareDisplay ? <Overlay /> : null}\n                {shareDisplay === false ? null :\n                    <ShareTweet\n                        tweet={tweetShare.tweet}\n                        user={tweetShare.user}\n                        activeUser={activeUser}\n                        handleShareView={handleShareView}\n                        handleBookmark={handleBookmark}\n                        handleRemoveBookmark={handleRemoveBookmark}\n                    />\n                }\n            </main>\n            <MobileFooterMenu page=\"tweet\" />\n        </div>\n    );\n}\n\nexport default DetailedTweet;\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport ComposeTweetHeader from '../../components/ComposeTweetHeader/ComposeTweetHeader';\nimport './ReplyTweet.scss';\nimport profilePic from '../../assets/images/default-profile-pic.png';\nimport ComposeTweetMain from '../../components/ComposeTweetMain/ComposeTweetMain';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\n\nconst ReplyTweet = ({ activeUser, handleReply }) => {\n\n    const [replyText, setReplyText] = useState('');\n    const [disabled, setDisabled] = useState(true);\n    const [tweet, setTweet] = useState(null);\n    const [user, setUser] = useState(null);\n    const { tweetId } = useParams();\n\n    useEffect(() => {\n        axios.get(`http://localhost:5000/api/tweets/${tweetId}`)\n            .then(res => setTweet(res.data))\n            .catch(err => console.log(err));\n    }, [tweetId]);\n\n    useEffect(() => {\n        if (tweet) {\n            axios.get(`http://localhost:5000/api/users/${tweet.userId}`)\n                .then(res => setUser(res.data))\n                .catch(err => console.log(err));\n        }\n    }, [tweet]);\n\n    const displayDate = () => {\n        const tweetTime = new Date(tweet.createdAt);\n        const difference = (Date.now() - tweetTime) / (1000 * 60);\n        \n        if (difference < 1) {\n            return `${(difference * 60).toFixed(0)}s`;\n        } else if (difference < 60) {\n            return `${difference.toFixed(0)}m`;\n        } else if (difference < 1440) {\n            return `${(difference / 60).toFixed(0)}h`;\n        } else if (difference < 10080) {\n            return `${(difference / (60 * 24)).toFixed(0)}d`;\n        } else {\n            return tweetTime.toLocaleDateString('en-AU');\n        }\n    }\n\n    const handleSetDisabled = (boolean) => {\n        setDisabled(boolean)\n    }\n\n    const handleSetReplyText = (val) => {\n        setReplyText(val);\n    }\n\n    return (\n        <div className=\"reply-tweet\">\n            <ComposeTweetHeader disabled={disabled} handleReply={handleReply} type={'Reply'} tweetId={tweetId} text={replyText} />\n            <main className=\"reply-tweet-main\">\n                <DesktopMenu activeUser={activeUser} page=\"Reply Tweet\" />\n                <div className=\"tweet\">\n                    <img className=\"tweet-profile-pic\" src={profilePic} alt=\"\" />\n                    <div className=\"main-tweet-content\">\n                        <div className=\"tweet-header\">\n                            <div className=\"tweet-header-main-container\">\n                                <div className=\"tweet-header-main\">\n                                    <span className=\"tweet-user-name\">{user ? user.displayName : ''}</span>\n                                    <span className=\"tweet-user-username\">{user ? `@${user.username}` : ''}</span>\n                                    <div className=\"separator\"></div>\n                                    <span className=\"tweet-time\">{tweet ? displayDate() : ''}</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"tweet-main\">{tweet ? tweet.text : ''}</div>\n                        <div className=\"reply-info\">\n                            {user ? <p>Replying to <span>@{user.username}</span></p> : null}\n                        </div>\n                    </div>\n                </div>\n                <ComposeTweetMain \n                    text={replyText}\n                    handleSetDisabled={handleSetDisabled}\n                    handleSetText={handleSetReplyText}\n                    placeholder={'Tweet your reply'}\n                />\n                <div className=\"connecting-line\"></div>\n            </main>\n        </div>\n    );\n}\n\nexport default ReplyTweet;\n","export default __webpack_public_path__ + \"static/media/retweet.a07ee87f.svg\";","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './Profile.scss';\nimport profilePic from '../../assets/images/default-profile-pic.png';\nimport retweetIcon from '../../assets/images/retweet.svg';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport NewTweetButton from '../../components/NewTweetButton/NewTweetButton';\nimport ShareTweet from '../../components/ShareTweet/ShareTweet';\nimport Tweet from '../../components/Tweet/Tweet';\nimport TweetOptions from '../../components/TweetOptions/TweetOptions';\nimport Overlay from '../../components/Overlay/Overlay';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\n\nconst Profile = ({ \n    activeUser, \n    handleLike, \n    handleUnlike, \n    handleRetweet, \n    handleRemoveRetweet, \n    handleDeleteReply, \n    handleDeleteTweet,\n    handleBookmark,\n    handleRemoveBookmark,\n    handleFollowUser,\n    handleUnfollowUser\n}) => {\n\n    const { username } = useParams();\n    const navigate = useNavigate();\n    const [user, setUser] = useState(null);\n    const [tweets, setTweets] = useState(null);\n    const [retweets, setRetweets] = useState(null);\n    const [retweetUsers, setRetweetUsers] = useState(null);\n    const [likedTweets, setLikedTweets] = useState(null);\n    const [likedTweetsUsers, setLikedTweetsUsers] = useState(null);\n    const [optionsDisplay, setOptionsDisplay] = useState(false);\n    const [tweetOptions, setTweetOptions] = useState(null);\n    const [shareDisplay, setShareDisplay] = useState(false);\n    const [tweetShare, setTweetShare] = useState(null);\n\n    const tweetTab = useRef(null);\n    const repliesTab = useRef(null);\n    const mediaTab = useRef(null);\n    const likesTab = useRef(null);\n    const [activeTab, setActiveTab] = useState(tweetTab);\n\n    useEffect(() => {\n        if (activeUser) {\n            if (username !== activeUser.username) {\n                axios.get(`http://localhost:5000/api/users/username/${username}`)\n                    .then(res => setUser(res.data))\n                    .catch(err => console.log(err));\n            } else {\n                setUser(activeUser);\n            }\n        }\n    }, [username, activeUser]);\n\n    useEffect(() => {\n        if (user) {\n            const userTweets = user.tweets;\n            if (userTweets.length > 0) {\n                axios.get(`http://localhost:5000/api/users/${user._id}/tweets`)\n                    .then(res => setTweets(res.data))\n                    .catch(err => console.log(err));\n            } else {\n                setTweets([]);\n            }\n\n            const userLikes = user.likes;\n            if (userLikes.length > 0) {\n                axios.get(`http://localhost:5000/api/users/${user._id}/likes`)\n                    .then(res => setLikedTweets(res.data))\n                    .catch(err => console.log(err));\n            } else {\n                setLikedTweets([]);\n                setLikedTweetsUsers([]);\n            }\n\n            const userRetweets = user.retweets;\n            if (userRetweets.length > 0) {\n                axios.get(`http://localhost:5000/api/users/${user._id}/retweets`)\n                    .then(res => setRetweets(res.data))\n                    .catch(err => console.log(err));\n            } else {\n                setRetweets([]);\n                setRetweetUsers([]);\n            }\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (retweets) {\n            const allRetweetUsers = [];\n            retweets.forEach(tweet => {\n                axios.get(`http://localhost:5000/api/users/${tweet.userId}`)\n                    .then(res => {\n                        allRetweetUsers.push(res.data);\n                        const uniqueUsers = [...new Map(allRetweetUsers.map(user => [user['username'], user])).values()];\n                        setRetweetUsers(uniqueUsers);\n                    })\n                    .catch(err => console.log(err));\n            });\n        }\n    }, [retweets]);\n\n    useEffect(() => {\n        if (likedTweets) {\n            const allLikedTweetsUsers = [];\n            likedTweets.forEach(tweet => {\n                axios.get(`http://localhost:5000/api/users/${tweet.userId}`)\n                    .then(res => {\n                        allLikedTweetsUsers.push(res.data);\n                        const uniqueUsers = [...new Map(allLikedTweetsUsers.map(user => [user['username'], user])).values()];\n                        setLikedTweetsUsers(uniqueUsers);\n                    })\n                    .catch(err => console.log(err));\n            });\n        }\n    }, [likedTweets]);\n\n    useEffect(() => {\n        const tabs = [tweetTab, repliesTab, mediaTab, likesTab];\n        tabs.forEach(tab => tab === activeTab ? tab.current.classList.add('active-tab') : tab.current.classList.remove('active-tab'));\n    }, [activeTab]);\n    \n    const handleFollowEvent = () => {\n        if (activeUser.following.includes(user._id)) {\n            handleUnfollowUser(user._id);\n        } else {\n            handleFollowUser(user._id);\n        }\n    }\n\n    const getJoinedDate = () => {\n        const creationDate = new Date(user.createdAt);\n        const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', \n            'October', 'November', 'December'];\n        return `${months[creationDate.getMonth()]} ${creationDate.getFullYear()}`;\n    }\n\n    const handleTweetOptionsEvent = (tweet) => {\n        setTweetOptions(tweet);\n        handleOptionsView();\n    }\n\n    const handleOptionsView = () => {\n        setOptionsDisplay(display => !display);\n    }\n\n    const handleShareTweetEvent = (tweet, user) => {\n        setTweetShare({ tweet: tweet, user: user });\n        handleShareView();\n    }\n\n    const handleShareView = () => {\n        setShareDisplay(display => !display);\n    }\n\n    const sortTweets = (tweets) => {\n        const sortedTweets = tweets.sort((a, b) => {\n            return new Date(b.createdAt) - new Date(a.createdAt);\n        });\n        return sortedTweets;\n    }\n\n    const filterTweets = () => {\n        if (tweets && likedTweets) {\n            if (activeTab === tweetTab) {\n                const filteredTweets = tweets.filter(tweet => tweet.reply === false);\n                return sortTweets([...filteredTweets, ...retweets]);\n            } else if (activeTab === repliesTab) {\n                return sortTweets(tweets);\n            } else if (activeTab === mediaTab) {\n                return [];\n            } else if (activeTab === likesTab) {\n                return [...likedTweets].reverse();\n            }\n        }\n    }\n\n    const getTweetsDisplay = () => {\n        if (tweets && retweets && likedTweets && retweetUsers && likedTweetsUsers) {\n            const tweetsDisplay = filterTweets().map(tweet => {\n                const tweetUsers = [...retweetUsers, ...likedTweetsUsers];\n                const tweetUser = tweetUsers.find(user => user._id === tweet.userId);\n                \n                return (\n                    <div className=\"tweet-container\" key={tweet._id}>\n                        {user.retweets.includes(tweet._id) && activeTab !== likesTab ? \n                            <div className=\"retweet-container\">\n                                <img src={retweetIcon} alt=\"Retweet icon\" className=\"retweet-icon\" />\n                                <span className=\"retweet-text\">\n                                    {user._id === activeUser._id ? 'You' : user.displayName}&nbsp;retweeted\n                                </span>\n                            </div>\n                            : null\n                        }\n                        <Tweet\n                            tweet={tweet}\n                            user={user._id === tweet.userId ? user : tweetUser}\n                            activeUser={activeUser}\n                            handleLike={handleLike}\n                            handleUnlike={handleUnlike}\n                            handleRetweet={handleRetweet}\n                            handleRemoveRetweet={handleRemoveRetweet}\n                            handleTweetOptions={handleTweetOptionsEvent}\n                            handleShareTweet={handleShareTweetEvent}\n                        />\n                    </div>\n                );\n            });\n            return tweetsDisplay;\n        }\n    }\n\n    return (\n        <div className='profile'>\n            <div className=\"profile-wrapper\">\n                <header className='profile-header'>\n                    <button className=\"back-btn\" aria-label='Go back' onClick={() => navigate(-1)}>\n                        <span className='hidden'>Back</span>\n                    </button>\n                    <div className=\"profile-header-user-details\">\n                        <span className=\"profile-header-user-name\">{user ? user.displayName : ''}</span>\n                        <span className=\"profile-header-tweet-count\">{user ? `${user.tweets.length} Tweets` : ''}</span>\n                    </div>\n                </header>\n                <main className=\"profile-main\">\n                    <div className=\"profile-main-wrapper\">\n                        <DesktopMenu activeUser={activeUser} page={activeUser === user ? 'Profile' : 'Other User Profile'} />\n                        <div className=\"profile-main-container\">\n                            <div className=\"profile-cover-photo\"></div>\n                            <div className=\"profile-details\">\n                                <div className=\"profile-details-header\">\n                                    <img src={profilePic} alt=\"\" className=\"profile-pic\" />\n                                    {\n                                        user === null ? null \n                                            : (user._id === activeUser._id) ?\n                                                <button \n                                                    className=\"edit-account-btn\" \n                                                    onClick={() => navigate('/settings/profile')}\n                                                >Edit profile</button> \n                                            : \n                                                <button \n                                                    className={\n                                                        `follow-btn ${activeUser.following.includes(user._id) ? `following` : `follow`}`\n                                                    }\n                                                    onClick={handleFollowEvent}\n                                                >\n                                                {activeUser.following.includes(user._id) ? 'Following' : 'Follow'}\n                                                </button>\n                                    }\n                                </div>\n                                <span className=\"profile-display-name\">{user ? user.displayName : ''}</span>\n                                <div className=\"profile-username-container\">\n                                    <span className=\"profile-username\">@{user ? user.username : ''}</span>\n                                    {user === null ? null : (user.following.includes(activeUser._id)) ? \n                                        <div className=\"follows-you-tag\">Follows you</div> : null\n                                    }\n                                </div>\n                                { user === null ? null : (user.bio) ? <span className=\"profile-bio\">{user.bio}</span> : null }\n                                <div className=\"joined-date\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                                    </svg>\n                                    <span>Joined {user ? getJoinedDate() : ''}</span>\n                                </div>\n                                <div className=\"profile-network-container\">\n                                    <div className=\"profile-network\" onClick={() => navigate(`/${user.username}/following`)}>\n                                        <span className=\"profile-network-number\">{user ? user.following.length : ''}</span>\n                                        &nbsp;Following\n                                    </div>\n                                    <div className=\"profile-network\" onClick={() => navigate(`/${user.username}/followers`)}>\n                                        <span className=\"profile-network-number\">{user ? user.followers.length : ''}</span>\n                                        &nbsp;Followers\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"profile-tabs\">\n                                <button \n                                    className=\"profile-tab\" \n                                    ref={tweetTab} \n                                    onClick={() => setActiveTab(tweetTab)}\n                                >Tweets</button>\n                                <button \n                                    className=\"profile-tab\" \n                                    ref={repliesTab}\n                                    onClick={() => setActiveTab(repliesTab)}\n                                >Tweets &amp; replies</button>\n                                <button \n                                    className=\"profile-tab\" \n                                    ref={mediaTab}\n                                    onClick={() => setActiveTab(mediaTab)}\n                                >Media</button>\n                                <button \n                                    className=\"profile-tab\" \n                                    ref={likesTab}\n                                    onClick={() => setActiveTab(likesTab)}\n                                >Likes</button>\n                            </div>\n                        </div>\n                        <div className=\"tweets-container\">\n                            { tweets ? getTweetsDisplay() : null}\n                        </div>\n                        <NewTweetButton />\n                    </div>\n                    {optionsDisplay === false ? null :\n                        <TweetOptions \n                            handleOptionsView={handleOptionsView} \n                            tweet={tweetOptions} \n                            handleDeleteTweet={handleDeleteTweet}\n                            handleDeleteReply={handleDeleteReply}\n                        />\n                    }\n                    {optionsDisplay || shareDisplay ? <Overlay /> : null}\n                    {shareDisplay === false ? null :\n                        <ShareTweet\n                            tweet={tweetShare.tweet}\n                            user={tweetShare.user}\n                            activeUser={activeUser}\n                            handleShareView={handleShareView}\n                            handleBookmark={handleBookmark}\n                            handleRemoveBookmark={handleRemoveBookmark}\n                        />\n                    }\n                </main>\n                <MobileFooterMenu page=\"profile\" />\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ProfileSettings.scss';\nimport profilePic from '../../assets/images/default-profile-pic.png';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\n\nconst ProfileSettings = ({ activeUser, handleUpdateProfile }) => {\n\n    const [name, setName] = useState(activeUser ? activeUser.displayName : '');\n    const [bio, setBio] = useState(activeUser ? activeUser.bio : '');\n    const [disabled, setDisabled] = useState(false);\n    const navigate = useNavigate();\n    const nameInput = useRef(null);\n    const nameErrorMessage = useRef(null);\n    const bioInput = useRef(null);\n    const bioErrorMessage = useRef(null);\n\n    const handleNameChange = (e) => {\n        setName(e.target.value);\n\n        if (e.target.value === '') {\n            nameErrorMessage.current.innerText = 'Name cannot be empty';\n            nameErrorMessage.current.style.display = 'block';\n            nameInput.current.classList.add('input-error');\n            setDisabled(true);\n        } else if (e.target.value.length > 25) {\n            nameErrorMessage.current.innerText = 'Name cannot be more than 25 characters';\n            nameErrorMessage.current.style.display = 'block';\n            nameInput.current.classList.add('input-error');\n            setDisabled(true);\n        } else {\n            nameErrorMessage.current.style.display = 'none';\n            nameInput.current.classList.remove('input-error');\n            setDisabled(false);\n        }\n    }\n\n    const handleBioChange = (e) => {\n        setBio(e.target.value);\n\n        e.target.style.height = 'auto';\n        e.target.style.height = `${e.target.scrollHeight}px`;\n\n        if (e.target.value.length > 100) {\n            bioErrorMessage.current.style.display = 'block';\n            bioInput.current.classList.add('input-error');\n            setDisabled(true);\n        } else {\n            bioErrorMessage.current.style.display = 'none';\n            bioInput.current.classList.remove('input-error');\n            setDisabled(false);\n        }\n    }\n\n    const handleSave = () => {\n        handleUpdateProfile(name.trim(), bio.trim());\n        navigate(-1);\n    }\n\n    return (\n        <div className='profile-settings'>\n            <header className='profile-settings-header'>\n                <div className=\"profile-settings-header-main\">\n                    <button className=\"back\" aria-label='Go back' onClick={() => navigate(-1)}>\n                        <span className=\"hidden\">Back</span>\n                    </button>\n                    <h1>Edit profile</h1>\n                </div>\n                <button className=\"profile-settings-save-btn\" onClick={handleSave} disabled={disabled}>Save</button>\n            </header>\n            <main className=\"profile-settings-main\">\n                <DesktopMenu activeUser={activeUser} page=\"Profile Settings\" />\n                <div className=\"cover-image-container\">\n                    <div className=\"cover-image\"></div>\n                    <div className=\"cover-image-actions\">\n                        <button className=\"change-image\" aria-label='Change cover image'>\n                            <span className=\"hidden\">Change</span>\n                        </button>\n                        <button className=\"remove-image\" aria-label='Remove cover image'>\n                            <span className=\"hidden\">Remove</span>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"profile-image-container\">\n                    <img src={profilePic} alt=\"\" className=\"profile-image\" />\n                    <div className=\"profile-image-actions\">\n                        <button className=\"change-image\" aria-label='Change profile picture'>\n                            <span className=\"hidden\">Change</span>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"profile-main-details\">\n                    <div className=\"input-container\">\n                        <label htmlFor=\"name\" className='input-label'>Name</label>\n                        <input \n                            type=\"text\" \n                            name=\"name\" \n                            className='profile-settings-input' \n                            value={name} \n                            onChange={handleNameChange}\n                            ref={nameInput}\n                        />\n                        <span className=\"error-message\" ref={nameErrorMessage}></span>\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"bio\" className='input-label'>Bio</label>\n                        <textarea \n                            name=\"bio\" \n                            className='profile-settings-input profile-settings-bio'\n                            value={bio}\n                            onChange={handleBioChange}\n                            ref={bioInput}\n                        />\n                        <span className=\"error-message\" ref={bioErrorMessage}>Bio cannot be more than 100 characters</span>\n                    </div>\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default ProfileSettings;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SettingsHeader.scss';\n\nconst SettingsHeader = ({ activeUser, pageTitle }) => {\n\n    const navigate = useNavigate();\n\n    return (\n        <header className=\"settings-header\">\n            <button className=\"back\" aria-label='Go back' onClick={() => navigate(-1)}>\n                <span className=\"hidden\">Back</span>\n            </button>\n            <div className=\"settings-header-content\">\n                <h1>{pageTitle}</h1>\n                <span className=\"settings-user-username\">@{activeUser ? activeUser.username : ''}</span>\n            </div>\n        </header>\n    );\n}\n\nexport default SettingsHeader;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport SettingsHeader from '../../components/SettingsHeader/SettingsHeader';\nimport './Settings.scss';\n\nconst Settings = ({ activeUser }) => {\n\n    return (\n        <div className='settings'>\n            <SettingsHeader activeUser={activeUser} pageTitle={'Settings'} />\n            <main className=\"settings-main\">\n                <DesktopMenu activeUser={activeUser} page=\"Settings\" />\n                <nav className=\"settings-nav\">\n                    <ul>\n                        <li className='settings-link-container'>\n                            <Link to={'/settings/account'} className='settings-link'>\n                                <span>Your Account</span>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                                </svg>\n                            </Link>\n                        </li>\n                        <li className=\"settings-link-container\">\n                            <Link to={'/settings/privacy_and_safety'} className='settings-link'>\n                                <span>Privacy and Safety</span>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                                </svg>\n                            </Link>\n                        </li>\n                        <li className=\"settings-link-container\">\n                            <Link to={'/settings/notifications'} className='settings-link'>\n                                <span>Notifications</span>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                                </svg>\n                            </Link>\n                        </li> \n                    </ul>\n                </nav>\n            </main>\n            <MobileFooterMenu page={'settings'} />\n        </div>\n    );\n}\n\nexport default Settings;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport SettingsHeader from '../../components/SettingsHeader/SettingsHeader';\nimport './AccountSettings.scss';\n\nconst AccountSettings = ({ activeUser }) => {\n\n    return (\n        <div className='account-settings'>\n            <SettingsHeader activeUser={activeUser} pageTitle={'Your Account'} />\n            <main className=\"account-settings-main\">\n                <DesktopMenu activeUser={activeUser} page=\"Account Settings\" />\n                <span className=\"account-settings-description\">\n                    See information about your account, change your password, or learn about your account deactivation options\n                </span>\n                <nav className=\"account-settings-nav\">\n                    <ul>\n                        <li className='account-settings-link-container'>\n                            <Link to={'/settings/your_twitter_data/account'} className='account-settings-link'>\n                                <div className=\"account-settings-link-content\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                                    </svg>\n                                    <div className=\"account-settings-link-text\">\n                                        <span className=\"link-title\">Account Information</span>\n                                        <span className=\"link-description\">\n                                            See your account information like your username and email address.\n                                        </span>\n                                    </div>\n                                </div>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                                </svg>\n                            </Link>\n                        </li>\n                        <li className='account-settings-link-container'>\n                            <Link to={'/settings/password'} className='account-settings-link'>\n                                <div className=\"account-settings-link-content\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\n                                    </svg>\n                                    <div className=\"account-settings-link-text\">\n                                        <span className=\"link-title\">Change Password</span>\n                                        <span className=\"link-description\">\n                                            Change your password at any time.\n                                        </span>\n                                    </div>\n                                </div>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                                </svg>\n                            </Link>\n                        </li>\n                        <li className='account-settings-link-container'>\n                            <Link to={'/settings/deactivate'} className='account-settings-link'>\n                                <div className=\"account-settings-link-content\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#E03B39\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                                    </svg>\n                                    <div className=\"account-settings-link-text\">\n                                        <span className=\"link-title red-link-title\">Deactivate Your Account</span>\n                                        <span className=\"link-description\">\n                                            Find out how you can deactivate your account.\n                                        </span>\n                                    </div>\n                                </div>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                                </svg>\n                            </Link>\n                        </li>\n                    </ul>\n                </nav>\n            </main>\n            <MobileFooterMenu page={'account settings'} />\n        </div>\n    );\n}\n\nexport default AccountSettings;\n","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './ChangePassword.scss';\nimport SettingsHeader from '../../components/SettingsHeader/SettingsHeader';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\n\nconst ChangePassword = ({ activeUser, handleChangePassword }) => {\n\n    const [currentPassword, setCurrentPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmedPassword, setConfirmedPassword] = useState('');\n    const [disabled, setDisabled] = useState(true);\n    const navigate = useNavigate();\n\n    const currentPasswordInput = useRef(null);\n    const currentPasswordErrorMessage = useRef(null);\n    const newPasswordInput = useRef(null);\n    const newPasswordErrorMessage = useRef(null);\n    const confirmedPasswordInput = useRef(null);\n    const confirmedPasswordErrorMessage = useRef(null);\n\n    useEffect(() => {\n        currentPassword.trim() && newPassword.trim() && confirmedPassword.trim() ? setDisabled(false) : setDisabled(true);\n    }, [currentPassword, newPassword, confirmedPassword]);\n\n    const handleCurrentPasswordChange = (e) => {\n        setCurrentPassword(e.target.value);\n    }\n\n    const handleNewPasswordChange = (e) => {\n        setNewPassword(e.target.value);\n    }\n\n    const handleConfirmedPasswordChange = (e) => {\n        setConfirmedPassword(e.target.value);\n    }\n\n    const handleSaveEvent = () => {\n        if (newPassword !== confirmedPassword) {\n            confirmedPasswordInput.current.classList.add('input-error');\n            confirmedPasswordErrorMessage.current.style.display = 'block';\n        } else {\n            confirmedPasswordInput.current.classList.remove('input-error');\n            confirmedPasswordErrorMessage.current.style.display = 'none';\n\n            if (newPassword.length < 8) {\n                newPasswordInput.current.classList.add('input-error');\n                newPasswordErrorMessage.current.innerText = 'Password must be at least 8 characters';\n                newPasswordErrorMessage.current.style.display = 'block';\n            } else if (newPassword === currentPassword) {\n                newPasswordInput.current.classList.add('input-error');\n                newPasswordErrorMessage.current.innerText = 'New password cannot be the same as current password';\n                newPasswordErrorMessage.current.style.display = 'block';\n            } else {\n                newPasswordInput.current.classList.remove('input-error');\n                newPasswordErrorMessage.current.style.display = 'none';\n\n                // Check if current password is valid\n                axios.post(`http://localhost:5000/api/users/password/${activeUser._id}`, { password: currentPassword })\n                    .then(res => {\n                        if (res.status === 200) {\n                            handleChangePassword(newPassword);\n                            navigate('/home');\n                        }\n                    })\n                    .catch(err => {\n                        if (err.response.status === 406) {\n                            currentPasswordInput.current.classList.add('input-error');\n                            currentPasswordErrorMessage.current.style.display = 'block';\n                        } else {\n                            console.log(err);\n                            currentPasswordInput.current.classList.remove('input-error');\n                            currentPasswordErrorMessage.current.style.display = 'none';\n                        }\n                    });\n            }\n        }\n    }\n\n    return (\n        <div className='change-password'>\n            <SettingsHeader activeUser={activeUser} pageTitle={'Change your password'} />\n            <main className=\"change-password-main\">\n                <DesktopMenu activeUser={activeUser} page=\"Change Password\" />\n                <div className=\"change-password-input-container current-password-container\">\n                    <input \n                        type=\"password\" \n                        className='change-password-input' \n                        placeholder='Current password' \n                        value={currentPassword} \n                        onChange={handleCurrentPasswordChange}\n                        ref={currentPasswordInput}\n                    />\n                    <span className=\"error-message\" ref={currentPasswordErrorMessage}>The password you entered was incorrect</span>\n                    <Link to={'/forgot-password'} className='change-password-link'>Forgot password?</Link>\n                </div>\n                <div className=\"update-password-container\">\n                    <div className=\"change-password-input-container\">\n                        <input \n                            type=\"password\" \n                            className='change-password-input'\n                            placeholder='New password'\n                            value={newPassword}\n                            onChange={handleNewPasswordChange}\n                            ref={newPasswordInput}\n                        />\n                        <span className=\"error-message\" ref={newPasswordErrorMessage}></span>\n                    </div>\n                    <div className=\"change-password-input-container\">\n                        <input \n                            type=\"password\"\n                            className='change-password-input'\n                            placeholder='Confirm password'\n                            value={confirmedPassword}\n                            onChange={handleConfirmedPasswordChange}\n                            ref={confirmedPasswordInput}\n                        />\n                        <span className=\"error-message\" ref={confirmedPasswordErrorMessage}>Passwords do not match</span>\n                    </div>\n                </div>\n                <div className=\"save-btn-container\">\n                    <button className=\"change-password-save-btn\" disabled={disabled} onClick={handleSaveEvent}>Save</button>\n                </div>\n            </main>\n            <MobileFooterMenu page={'change password'} />\n        </div>\n    );\n}\n\nexport default ChangePassword;\n","import React, { useState, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './DeactivateAccount.scss';\nimport profilePic from '../../assets/images/default-profile-pic.png';\nimport axios from 'axios';\nimport SettingsHeader from '../../components/SettingsHeader/SettingsHeader';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\n\nconst DeactivateAccount = ({ activeUser, handleDeactivateAccount }) => {\n\n    const [deactivateClicked, setDeactivateClicked] = useState(false);\n    const [password, setPassword] = useState('');\n    const passwordInput = useRef(null);\n    const passwordErrorMessage = useRef(null);\n    const navigate = useNavigate();\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const handleDeactivate = () => {\n        axios.post(`http://localhost:5000/api/users/password/${activeUser._id}`, { password: password })\n            .then(res => {\n                const tweets = [];\n                if (activeUser.tweets.length > 0) {\n                    activeUser.tweets.forEach((tweetId, index, array) => {\n                        axios.get(`http://localhost:5000/api/tweets/${tweetId}`)\n                            .then(res => {\n                                tweets.push(res.data);\n                                console.log(tweets);\n                                if (index === (array.length - 1)) {\n                                    deleteTweets(tweets);\n                                    handleDeactivateAccount();\n                                    navigate('/');\n                                }\n                            })\n                            .catch(err => console.log(err));\n                    });\n                }\n            })\n            .catch(err => {\n                if (err.response.status === 406) {\n                    passwordInput.current.classList.add('input-error');\n                    passwordErrorMessage.current.style.display = 'block';\n                } else {\n                    passwordInput.current.classList.remove('input-error');\n                    passwordErrorMessage.current.style.display = 'none';\n                    console.log(err);\n                }\n            });\n    }\n\n    const deleteTweets = (tweets) => {\n        tweets.forEach(tweet => {\n            if (tweet.reply) {\n                axios.delete(`http://localhost:5000/api/tweets/${tweet.replyTo}/delete/${tweet._id}`)\n                    .then(res => console.log(res))\n                    .catch(err => console.log(err));\n            } else {\n                axios.delete(`http://localhost:5000/api/tweets/${tweet._id}`)\n                    .then(res => console.log(res))\n                    .then(err => console.log(err));\n            }\n        });\n    }\n\n    return (\n        <div className='deactivate-account'>\n            <SettingsHeader \n                activeUser={activeUser} \n                pageTitle={deactivateClicked ? 'Confirm your password' : 'Deactivate Account'} \n            />\n            {deactivateClicked === false ? \n                <main className=\"deactivate-account-main\">\n                    <DesktopMenu activeUser={activeUser} page=\"Deactivate Account\" />\n                    <div className=\"profile-container\" onClick={() => navigate(`/${activeUser.username}`)}>\n                        <img src={profilePic} alt=\"\" className=\"profile-pic\" />\n                        <div className=\"profile-details\">\n                            <span className=\"profile-display-name\">{activeUser ? activeUser.displayName : ''}</span>\n                            <span className=\"profile-username\">@{activeUser ? activeUser.username : ''}</span>\n                        </div>\n                    </div>\n                    <div className=\"deactivate-account-description\">\n                        <h2>This will deactivate your account</h2>\n                        <p className=\"description\">You're about to start the process of deactivating your Twitter account. Your display name, @username, and public profile will no longer be viewable on Twitter.com, Twitter for iOS, or Twitter for Android.</p>\n                    </div>\n                    <div className=\"deactivate-account-warnings\">\n                        <h2>What else you should know</h2>\n                        <div className=\"description-container\">\n                            <span className=\"description\">\n                                Some account information may still be available in search engines, such as Google or Bing.&nbsp;\n                                <a href=\"https://help.twitter.com/en/safety-and-security/remove-twitter-profile-from-google-search\" className=\"deactivate-description-link\" target=\"_blank\" rel='noreferrer'>Learn more</a>\n                            </span>\n                        </div>\n                        <div className=\"description-container\">\n                            <span className=\"description\">\n                                If you just want to change your @username, you don't need to deactivate your account – edit it in your&nbsp;\n                                <Link to={'/settings/your_twitter_data/account'} className='deactivate-description-link'>settings</Link>.\n                            </span>\n                        </div>\n                        <div className=\"description-container\">\n                            <span className=\"description\">\n                                To use your current @username or email address with a different Twitter account,&nbsp;\n                                <Link to={'/settings/your_twitter_data/account'} className='deactivate-description-link'>change them</Link>\n                                &nbsp;before you deactivate this account.\n                            </span>\n                        </div>\n                    </div>\n                    <div className=\"deactivate-btn-container\">\n                        <button className=\"deactivate-btn\" onClick={() => setDeactivateClicked(true)}>Deactivate</button>\n                    </div>\n                </main>\n                :\n                <main className=\"deactivate-account-main\">\n                    <DesktopMenu activeUser={activeUser} page=\"Deactivate Account\" />\n                    <h2>Confirm your password</h2>\n                    <div className=\"description-container\">\n                        <span className=\"description\">\n                            Complete your deactivation request by entering the password associated with your account.\n                        </span>\n                    </div>\n                    <div className=\"deactivate-password-container\">\n                        <input \n                            type=\"password\"\n                            className='deactivate-password-input'\n                            placeholder='Password'\n                            value={password}\n                            onChange={handlePasswordChange}\n                            ref={passwordInput}\n                        />\n                        <span className=\"error-message\" ref={passwordErrorMessage}>The password you entered was incorrect</span>\n                        <Link to={'/forgot-password'} className='deactivate-description-link'>Forgot password?</Link>\n                    </div>\n                    <div className=\"deactivate-confirmation-btn-container\">\n                        <button className=\"deactivate-confirmation-btn\" onClick={handleDeactivate}>Deactivate</button>\n                    </div>\n                </main>\n            }\n            <MobileFooterMenu page={'deactivate account'} />\n        </div>\n    );\n}\n\nexport default DeactivateAccount;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport SettingsHeader from '../../components/SettingsHeader/SettingsHeader';\nimport './AccountInformation.scss';\n\nconst AccountInformation = ({ activeUser }) => {\n\n    const getAccountCreationTime = () => {\n        const creationDateTime = new Date(activeUser.createdAt);\n        const hours = creationDateTime.getHours() > 12 ? (creationDateTime.getHours() - 12) : creationDateTime.getHours();\n        const minutes = creationDateTime.getMinutes();\n        const seconds = creationDateTime.getSeconds();\n        if (creationDateTime.getHours() > 12) {\n            return `${creationDateTime.toDateString()}, ${hours}:${formatNumber(minutes)}:${formatNumber(seconds)} PM`;\n        } else {\n            return `${creationDateTime.toDateString()}, ${hours}:${formatNumber(minutes)}:${formatNumber(seconds)} AM`;\n        }\n    }\n\n    const formatNumber = (num) => {\n        return num < 10 ? `0${num}` : num;\n    }\n\n    return (\n        <div className='account-information'>\n            <SettingsHeader activeUser={activeUser} pageTitle={'Account Information'} />\n            <main className=\"account-information-main\">\n                <DesktopMenu activeUser={activeUser} page=\"Account Information\" />\n                <nav className=\"account-information-nav\">\n                    <ul>\n                        <li className=\"account-information-link-container\">\n                            <Link to={'/settings/username'} className=\"account-information-link\">\n                                <div className=\"link-content\">\n                                    <span className=\"link-title\">Username</span>\n                                    <span className=\"link-secondary-text\">@{activeUser ? activeUser.username : ''}</span>\n                                </div>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                                </svg>\n                            </Link>\n                        </li>\n                        <li className=\"account-information-link-container\">\n                            <Link to={'/settings/email'} className=\"account-information-link\">\n                                <div className=\"link-content\">\n                                    <span className=\"link-title\">Email</span>\n                                    <span className=\"link-secondary-text\">@{activeUser ? activeUser.email : ''}</span>\n                                </div>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#6F767C\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                                </svg>\n                            </Link>\n                        </li>\n                    </ul>\n                </nav>\n                <div className=\"account-creation-container\">\n                    <span className=\"account-creation-title\">Account creation</span>\n                    <span className=\"account-creation-time\">{activeUser ? getAccountCreationTime() : ''}</span>\n                </div>\n                <MobileFooterMenu page={'account information'} />\n            </main>\n        </div>\n    );\n}\n\nexport default AccountInformation;\n","import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport SettingsHeader from '../../components/SettingsHeader/SettingsHeader';\nimport './ChangeUsername.scss';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\n\nconst ChangeUsername = ({ activeUser, handleUsernameChange }) => {\n\n    const [username, setUsername] = useState(activeUser ? activeUser.username : '');\n    const [disabled, setDisabled] = useState(true);\n    const usernameInput = useRef(null);\n    const usernameErrorMessage = useRef(null);\n    const navigate = useNavigate();\n\n    const handleUsernameInputChange = (e) => {\n        setUsername(e.target.value);\n\n        if (e.target.value.length < 3) {\n            usernameInput.current.classList.add('input-error');\n            usernameErrorMessage.current.innerText = 'Your username must be at least 3 characters.';\n            usernameErrorMessage.current.style.display = 'block';\n            setDisabled(true);\n        } else if (e.target.value.length > 25) {\n            usernameInput.current.classList.add('input-error');\n            usernameErrorMessage.current.innerText = 'Your username cannot be longer than 25 characters.';\n            usernameErrorMessage.current.style.display = 'block';\n            setDisabled(true);\n        } else {\n            usernameInput.current.classList.remove('input-error');\n            usernameErrorMessage.current.style.display = 'none';\n            e.target.value === activeUser.username ? setDisabled(true) : setDisabled(false);\n        }\n    }\n\n    const handleSaveClick = () => {\n        axios.post('http://localhost:5000/api/users/username', { username: username })\n            .then(res => {\n                if (res.status === 200) {\n                    handleUsernameChange(username);\n                    navigate(-1);\n                }\n            })\n            .catch(err => {\n                if (err.response.status === 406) {\n                    usernameInput.current.classList.add('input-error');\n                    usernameErrorMessage.current.innerText = 'That username has been taken. Please choose another.';\n                    usernameErrorMessage.current.style.display = 'block';\n                } else {\n                    usernameInput.current.classList.remove('input-error');\n                    usernameErrorMessage.current.style.display = 'none';\n                }\n            });\n    }\n\n    return (\n        <div className='change-username'>\n            <SettingsHeader activeUser={activeUser} pageTitle={'Change username'} />\n            <main className=\"change-username-main\">\n                <DesktopMenu activeUser={activeUser} page=\"Change Username\" />\n                <div className=\"change-username-input-container\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input \n                        type=\"text\" \n                        name='username' \n                        className='change-username-input' \n                        value={username} \n                        onChange={handleUsernameInputChange} \n                        ref={usernameInput} \n                    />\n                    <span className=\"error-message\" ref={usernameErrorMessage}></span>\n                </div>\n                <div className=\"save-btn-container\">\n                    <button className=\"save-btn\" disabled={disabled} onClick={handleSaveClick}>Save</button>\n                </div>\n            </main>\n            <MobileFooterMenu page={'change username'} />\n        </div>\n    );\n}\n\nexport default ChangeUsername;\n","import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport SettingsHeader from '../../components/SettingsHeader/SettingsHeader';\nimport './ChangeEmail.scss';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\n\nconst ChangeEmail = ({ activeUser, handleEmailChange }) => {\n\n    const [newEmail, setNewEmail] = useState('');\n    const [disabled, setDisabled] = useState(true);\n    const newEmailInput = useRef(null);\n    const newEmailErrorMessage = useRef(null);\n    const navigate = useNavigate();\n\n    const handleNewEmailChange = (e) => {\n        setNewEmail(e.target.value);\n\n        if (e.target.value === activeUser.email) {\n            setDisabled(true);\n        } else if (e.target.value.trim() === '') {\n            setDisabled(true);\n        } else {\n            setDisabled(false);\n        }\n    }\n\n    const handleUpdateClick = () => {\n        const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (newEmail.length < 10) {\n            newEmailInput.current.classList.add('input-error');\n            newEmailErrorMessage.current.innerText = 'Email must be at least 10 characters.';\n            newEmailErrorMessage.current.style.display = 'block';\n        } else if (!regex.test(newEmail)) {\n            newEmailInput.current.classList.add('input-error');\n            newEmailErrorMessage.current.innerText = 'This is not a valid email address.';\n            newEmailErrorMessage.current.style.display = 'block';\n        } else {\n            newEmailInput.current.classList.remove('input-error');\n            newEmailErrorMessage.current.style.display = 'none';\n\n            axios.post('http://localhost:5000/api/users/email', { email: newEmail })\n                .then(res => {\n                    if (res.status === 200) {\n                        handleEmailChange(newEmail);\n                        navigate(-1);\n                    }\n                })\n                .catch(err => {\n                    if (err.response.status === 406) {\n                        newEmailInput.current.classList.add('input-error');\n                        newEmailErrorMessage.current.innerText = 'This email address is already in use.';\n                        newEmailErrorMessage.current.style.display = 'block';\n                    } else {\n                        newEmailInput.current.classList.remove('input-error');\n                        newEmailErrorMessage.current.style.display = 'none';\n                    }\n                });\n        }\n    }\n\n    return (\n        <div className='change-email'>\n            <SettingsHeader activeUser={activeUser} pageTitle={'Change email'} />\n            <main className=\"change-email-main\">\n                <DesktopMenu activeUser={activeUser} page=\"Change Email\" />\n                <div className=\"current-email-container\">\n                    <label htmlFor=\"current-email\">Current email</label>\n                    <input \n                        type=\"email\"\n                        name='current-email' \n                        className='current-email' \n                        value={activeUser ? activeUser.email : ''} \n                        readOnly\n                    />\n                </div>\n                <div className=\"new-email-input-container\">\n                    <label htmlFor=\"new-email\">New email</label>\n                    <input \n                        type=\"email\" \n                        name='new-email'\n                        className='new-email-input'\n                        placeholder='Enter new email'\n                        value={newEmail}\n                        onChange={handleNewEmailChange}\n                        ref={newEmailInput}\n                    />\n                    <span className=\"error-message\" ref={newEmailErrorMessage}></span>\n                </div>\n                <div className=\"update-btn-container\">\n                    <button className=\"update-btn\" disabled={disabled} onClick={handleUpdateClick}>Update Email</button>\n                </div>\n            </main>\n            <MobileFooterMenu page={'change email'} />\n        </div>\n    );\n}\n\nexport default ChangeEmail;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport MobileFooterMenu from '../../components/MobileFooterMenu/MobileFooterMenu';\nimport './Bookmarks.scss';\nimport Tweet from '../../components/Tweet/Tweet';\nimport Overlay from '../../components/Overlay/Overlay';\nimport ShareTweet from '../../components/ShareTweet/ShareTweet';\nimport TweetOptions from '../../components/TweetOptions/TweetOptions';\nimport DesktopMenu from '../../components/DesktopMenu/DesktopMenu';\n\nconst Bookmarks = ({ \n    activeUser, \n    handleLike, \n    handleUnlike, \n    handleRetweet, \n    handleRemoveRetweet, \n    handleDeleteTweet,\n    handleRemoveBookmark,\n    handleClearBookmarks\n}) => {\n\n    const [bookmarks, setBookmarks] = useState(null);\n    const [bookmarkUsers, setBookmarkUsers] = useState(null);\n    const [optionsDisplay, setOptionsDisplay] = useState(false);\n    const [tweetOptions, setTweetOptions] = useState(null);\n    const [shareDisplay, setShareDisplay] = useState(false);\n    const [tweetShare, setTweetShare] = useState(null);\n    const [bookmarkOptionsDisplay, setBookmarkOptionsDisplay] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (activeUser) {\n            if (activeUser.bookmarks.length > 0) {\n                axios.get(`http://localhost:5000/api/users/${activeUser._id}/bookmarks`)\n                    .then(res => setBookmarks(res.data))\n                    .catch(err => console.log(err));\n            } else {\n                setBookmarks(null);\n            }\n        }\n    }, [activeUser]);\n\n    useEffect(() => {\n        if (bookmarks) {\n            const allBookmarksUsers = [];\n            bookmarks.forEach(tweet => {\n                axios.get(`http://localhost:5000/api/users/${tweet.userId}`)\n                    .then(res => {\n                        allBookmarksUsers.push(res.data);\n                        const uniqueUsers = [...new Map(allBookmarksUsers.map(user => [user['username'], user])).values()];\n                        setBookmarkUsers(uniqueUsers);\n                    })\n                    .catch(err => console.log(err));\n            });\n        }\n    }, [bookmarks]);\n\n    const handleClearBookmarksEvent = () => {\n        handleClearBookmarks();\n        handleBookmarkOptionsView();\n    }\n\n    const handleTweetOptionsEvent = (tweet) => {\n        setTweetOptions(tweet);\n        handleOptionsView();\n    }\n\n    const handleOptionsView = () => {\n        setOptionsDisplay(display => !display);\n    } \n\n    const handleShareTweetEvent = (tweet, user) => {\n        setTweetShare({tweet: tweet, user: user});\n        handleShareView();\n    }\n\n    const handleShareView = () => {\n        setShareDisplay(display => !display);\n    }\n\n    const handleBookmarkOptionsView = () => {\n        setBookmarkOptionsDisplay(display => !display);\n    }\n\n    const getTweetsDisplay = () => {\n        if (bookmarks && bookmarkUsers) {\n            const tweetsDisplay = [...bookmarks].reverse().map(tweet => {\n                const user = bookmarkUsers.find(user => user._id === tweet.userId);\n\n                return (\n                    <Tweet \n                        key={tweet._id}\n                        tweet={tweet}\n                        user={user}\n                        activeUser={activeUser}\n                        handleLike={handleLike}\n                        handleUnlike={handleUnlike}\n                        handleRetweet={handleRetweet}\n                        handleRemoveRetweet={handleRemoveRetweet}\n                        handleTweetOptions={handleTweetOptionsEvent}\n                        handleShareTweet={handleShareTweetEvent}\n                    />\n                );\n            });\n            return tweetsDisplay;\n        }\n    }\n\n    return (\n        <div className='bookmarks'>\n            <header className=\"bookmarks-header\">\n                <div className=\"bookmarks-header-main\">\n                    <button className=\"back\" aria-label='Go back' onClick={() => navigate(-1)}>\n                        <span className=\"hidden\">Back</span>\n                    </button>\n                    <div className=\"bookmarks-header-content\">\n                        <h1>Bookmarks</h1>\n                        <span className=\"bookmarks-user-username\">@{activeUser ? activeUser.username : ''}</span>\n                    </div>\n                </div>\n                <button className=\"bookmarks-options-btn\" aria-label='Bookmarks options' onClick={handleBookmarkOptionsView}>\n                    <span className=\"hidden\">Bookmark options</span>\n                </button>\n            </header>\n            <main className=\"bookmarks-main\">\n                <DesktopMenu activeUser={activeUser} page=\"Bookmarks\" />\n                <div className=\"tweets-container\">\n                    {bookmarks ? getTweetsDisplay() : null}\n                </div>\n                {optionsDisplay || shareDisplay || bookmarkOptionsDisplay ? <Overlay /> : null}\n                {optionsDisplay === false ? null :\n                    <TweetOptions \n                        handleOptionsView={handleOptionsView} \n                        tweet={tweetOptions} \n                        handleDeleteTweet={handleDeleteTweet}\n                    />\n                }\n                {shareDisplay === false ? null :\n                    <ShareTweet\n                        tweet={tweetShare.tweet}\n                        user={tweetShare.user}\n                        activeUser={activeUser}\n                        handleShareView={handleShareView}\n                        handleRemoveBookmark={handleRemoveBookmark}\n                    />\n                }\n                {bookmarkOptionsDisplay ? \n                    <div className=\"bookmark-options\">\n                        <button className=\"clear-bookmarks\" onClick={handleClearBookmarksEvent}>Clear all bookmarks</button>\n                        <button className=\"cancel\" onClick={handleBookmarkOptionsView}>Cancel</button>\n                    </div>\n                    : null\n                }\n            </main>\n            <MobileFooterMenu page={'bookmarks'} />\n        </div>\n    );\n}\n\nexport default Bookmarks;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './UserPreview.scss';\nimport profilePic from '../../assets/images/default-profile-pic.png';\n\nconst UserPreview = ({ activeUser, user, handleFollow, handleUnfollow }) => {\n\n    const navigate = useNavigate();\n\n    const handleFollowEvent = () => {\n        if (activeUser.following.includes(user._id)) {\n            handleUnfollow(user._id);\n        } else {\n            handleFollow(user._id);\n        }\n    }\n\n    return (\n        <div className='user-preview'>\n            <img src={profilePic} alt=\"\" className=\"user-preview-profile-pic\" onClick={() => navigate(`/${user.username}`)} />\n            <div className=\"user-preview-container\">\n                <div className=\"user-preview-header\">\n                    <div className=\"user-preview-header-text\" onClick={() => navigate(`/${user.username}`)}>\n                        <span className=\"user-name\">{user ? user.displayName : ''}</span>\n                        <div className=\"user-username-container\">\n                            <span className=\"user-username\">@{user ? user.username : ''}</span>\n                            {activeUser && user ? (activeUser.followers.includes(user._id)) ? \n                                <div className=\"follows-you-tag\">Follows you</div> : null : null\n                            }\n                        </div>\n                    </div>\n                    {activeUser && user ? (activeUser._id === user._id) ? null : \n                        <button \n                            className={activeUser && user \n                                ? (activeUser.following.includes(user._id)) ? 'following-btn' : 'follow-btn' \n                                : ''\n                            }\n                            onClick={handleFollowEvent}\n                        >\n                            {activeUser && user ? (activeUser.following.includes(user._id)) ? 'Following' : 'Follow' : ''}\n                        </button>\n                        : null\n                    }\n                </div>\n                <div className=\"user-preview-main\" onClick={() => navigate(`/${user.username}`)}>\n                        {user && user.bio.length > 0 ? user.bio : ''}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default UserPreview;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DesktopMenu from '../DesktopMenu/DesktopMenu';\nimport MobileFooterMenu from '../MobileFooterMenu/MobileFooterMenu';\nimport UserPreview from '../UserPreview/UserPreview';\nimport './UserNetwork.scss';\n\nconst UserNetwork = ({ activeUser, user, activeTab, users, handleFollow, handleUnfollow }) => {\n\n    const navigate = useNavigate();\n\n    return (\n        <div className='user-network'>\n            <div className=\"user-network-header\">\n                <div className=\"back\" aria-label='Go back' onClick={() => navigate(-1)}>\n                    <span className=\"hidden\">Back</span>\n                </div>\n                <div className=\"user-network-header-content\">\n                    <span className=\"user-name\">{user ? user.displayName : ''}</span>\n                    <span className=\"user-username\">@{user ? user.username : ''}</span>\n                </div>\n            </div>\n            <div className=\"user-network-main\">\n                <DesktopMenu activeUser={activeUser} page={activeTab} />\n                <div className=\"network-toggle-container\">\n                    <button \n                        className={`network-toggle-btn ${activeTab === 'Followers' ? 'active-tab' : ''}`}\n                        onClick={() => navigate(`/${user.username}/followers`)}\n                    >\n                        Followers\n                    </button>\n                    <button \n                        className={`network-toggle-btn ${activeTab === 'Following' ? 'active-tab' : ''}`}\n                        onClick={() => navigate(`/${user.username}/following`)}\n                    >\n                        Following\n                    </button>\n                </div>\n                {activeUser ? [...users].reverse().map(user => {\n                    return <UserPreview \n                        key={user._id} \n                        activeUser={activeUser} \n                        user={user} \n                        handleFollow={handleFollow} \n                        handleUnfollow={handleUnfollow} \n                        />\n                }): null}\n            </div>\n            <MobileFooterMenu page={activeTab} />\n        </div>\n    );\n}\n\nexport default UserNetwork;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport UserNetwork from '../../components/UserNetwork/UserNetwork';\n\nconst Followers = ({ activeUser, handleFollow, handleUnfollow }) => {\n\n    const { username } = useParams();\n    const [followers, setFollowers] = useState(null);\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        if (activeUser) {\n            if (activeUser.username === username) {\n                setUser(activeUser);\n            } else {\n                axios.get(`http://localhost:5000/api/users/username/${username}`)\n                    .then(res => setUser(res.data))\n                    .catch(err => console.log(err));\n            }\n        }\n    }, [activeUser, username]);\n\n    useEffect(() => {\n        if (user) {\n            if (user.followers.length > 0) {\n                axios.get(`http://localhost:5000/api/users/${user._id}/followers`)\n                    .then(res => setFollowers(res.data))\n                    .catch(err => console.log(err));\n            } else {\n                setFollowers([]);\n            }\n        }\n    }, [user]);\n\n    return (\n        <div className='network-followers'>\n            <UserNetwork \n                activeUser={activeUser} \n                user={user} \n                activeTab=\"Followers\" \n                users={followers ? followers : []} \n                handleFollow={handleFollow}\n                handleUnfollow={handleUnfollow}\n            />\n        </div>\n    );\n}\n\nexport default Followers;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport UserNetwork from '../../components/UserNetwork/UserNetwork';\n\nconst Following = ({ activeUser, handleFollow, handleUnfollow }) => {\n\n    const { username } = useParams();\n    const [following, setFollowing] = useState(null);\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        if (activeUser) {\n            if (activeUser.username === username) {\n                setUser(activeUser);\n            } else {\n                axios.get(`http://localhost:5000/api/users/username/${username}`)\n                    .then(res => setUser(res.data))\n                    .catch(err => console.log(err));\n            }\n        }\n    }, [activeUser, username]);\n\n    useEffect(() => {\n        if (user) {\n            if (user.following.length > 0) {\n                axios.get(`http://localhost:5000/api/users/${user._id}/following`)\n                    .then(res => setFollowing(res.data))\n                    .catch(err => console.log(err));\n            } else {\n                setFollowing([]);\n            }\n        }\n    }, [user]);\n\n    \n    \n    return (\n        <div className='network-following'>\n            <UserNetwork \n                activeUser={activeUser} \n                user={user} \n                activeTab=\"Following\" \n                users={following ? following : []} \n                handleFollow={handleFollow}\n                handleUnfollow={handleUnfollow}\n            />\n        </div>\n    );\n}\n\nexport default Following;\n","import React from 'react';\nimport DesktopMenu from '../DesktopMenu/DesktopMenu';\nimport MobileFooterMenu from '../MobileFooterMenu/MobileFooterMenu';\nimport './ComingSoon.scss';\n\nconst ComingSoon = ({ activeUser }) => {\n    return (\n        <div className='coming-soon'>\n            <main className='coming-soon-main'>\n                <DesktopMenu activeUser={activeUser} />\n                <div className=\"coming-soon-content\">\n                    <h1>Coming soon</h1>\n                    <h2>Page doesn't exist yet</h2>\n                    <p>I might add it eventually (...or not)</p>\n                    <span className=\"siu\">SIUUUUUUUUUUUU</span>\n                </div>\n            </main>\n            <MobileFooterMenu page=\"Not Found\" />\n        </div>\n    );\n}\n\nexport default ComingSoon;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DesktopMenu from '../DesktopMenu/DesktopMenu';\nimport MobileFooterMenu from '../MobileFooterMenu/MobileFooterMenu';\nimport UserPreview from '../UserPreview/UserPreview';\nimport './DetailedTweetInfo.scss';\n\nconst DetailedTweetInfo = ({ activeUser, users, handleFollow, handleUnfollow, page }) => {\n\n    const navigate = useNavigate();\n\n    return (\n        <div className='detailed-tweet-info'>\n            <header className=\"detailed-tweet-info-header\">\n                <div className=\"back\" aria-label='Go back' onClick={() => navigate(-1)}>\n                    <span className=\"hidden\">Back</span>\n                </div>\n                <h1>{page === 'Likes' ? 'Liked by' : 'Retweeted by'}</h1>\n            </header>\n            <main className=\"detail-tweet-info-main\">\n                <DesktopMenu activeUser={activeUser} page=\"Detailed Tweet Info\" />\n                <div className=\"users-container\">\n                    { activeUser ? [...users].reverse().map(user => {\n                        return <UserPreview \n                            key={user._id}\n                            activeUser={activeUser}\n                            user={user}\n                            handleFollow={handleFollow}\n                            handleUnfollow={handleUnfollow}\n                        />\n                    }) : null }\n                </div>\n            </main>\n            <MobileFooterMenu />\n        </div>\n    );\n}\n\nexport default DetailedTweetInfo;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport DetailedTweetInfo from '../../components/DetailedTweetInfo/DetailedTweetInfo';\n\nconst DetailedTweetLikes = ({ activeUser, handleFollow, handleUnfollow }) => {\n\n    const { tweetId } = useParams();\n    const [users, setUsers] = useState(null);\n\n    useEffect(() => {\n        axios.get(`http://localhost:5000/api/tweets/${tweetId}/likes`)\n            .then(res => setUsers(res.data))\n            .catch(err => console.log(err));\n    }, [tweetId]);\n\n    return (\n        <div className='detailed-tweet-likes'>\n            <DetailedTweetInfo \n                activeUser={activeUser} \n                users={users ? users : []} \n                handleFollow={handleFollow} \n                handleUnfollow={handleUnfollow}\n                page=\"Likes\"\n            />\n        </div>\n    );\n}\n\nexport default DetailedTweetLikes;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport DetailedTweetInfo from '../../components/DetailedTweetInfo/DetailedTweetInfo';\n\nconst DetailedTweetRetweets = ({ activeUser, handleFollow, handleUnfollow }) => {\n\n    const { tweetId } = useParams();\n    const [users, setUsers] = useState(null);\n\n    useEffect(() => {\n        axios.get(`http://localhost:5000/api/tweets/${tweetId}/retweets`)\n            .then(res => setUsers(res.data))\n            .catch(err => console.log(err));\n    }, [tweetId]);\n\n    return (\n        <div className='detailed-tweet-retweets'>\n            <DetailedTweetInfo \n                activeUser={activeUser} \n                users={users ? users : []} \n                handleFollow={handleFollow} \n                handleUnfollow={handleUnfollow}\n                page=\"Retweets\"\n            />\n        </div>\n    );\n}\n\nexport default DetailedTweetRetweets;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.scss';\nimport Base from './routes/Base/Base';\nimport Explore from './routes/Explore/Explore';\nimport ForgotPassword from './routes/ForgotPassword/ForgotPassword';\nimport Home from './routes/Home/Home';\nimport Login from './routes/Login/Login';\nimport Messages from './routes/Messages/Messages';\nimport Notifications from './routes/Notifications/Notifications';\nimport SignUp from './routes/SignUp/SignUp';\nimport ComposeTweet from './routes/ComposeTweet/ComposeTweet';\nimport DetailedTweet from './routes/DetailedTweet/DetailedTweet';\nimport ReplyTweet from './routes/ReplyTweet/ReplyTweet';\nimport Profile from './routes/Profile/Profile';\nimport ProfileSettings from './routes/ProfileSettings/ProfileSettings';\nimport Settings from './routes/Settings/Settings';\nimport AccountSettings from './routes/AccountSettings/AccountSettings';\nimport ChangePassword from './routes/ChangePassword/ChangePassword';\nimport DeactivateAccount from './routes/DeactivateAccount/DeactivateAccount';\nimport AccountInformation from './routes/AccountInformation/AccountInformation';\nimport ChangeUsername from './routes/ChangeUsername/ChangeUsername';\nimport ChangeEmail from './routes/ChangeEmail/ChangeEmail';\nimport Bookmarks from './routes/Bookmarks/Bookmarks';\nimport Followers from './routes/Followers/Followers';\nimport Following from './routes/Following/Following';\nimport ComingSoon from './components/ComingSoon/ComingSoon';\nimport DetailedTweetLikes from './routes/DetailedTweetLikes/DetailedTweetLikes';\nimport DetailedTweetRetweets from './routes/DetailedTweetRetweets/DetailedTweetRetweets';\n\nconst App = () => {\n\n  const [activeUser, setActiveUser] = useState(null);\n\n  useEffect(() => {\n    if (localStorage.getItem('activeUser')) {\n      setActiveUser(JSON.parse(localStorage.getItem('activeUser')));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (activeUser) {\n      localStorage.setItem('activeUser', JSON.stringify(activeUser));\n    }\n  }, [activeUser]);\n\n  const handleSetActiveUser = (user) => {\n    setActiveUser(user);\n  }\n\n  const handleUpdateProfile = (name, bio) => {\n    const body = {\n      displayName: name,\n      bio: bio\n    };\n\n    axios.put(`http://localhost:5000/api/users/${activeUser._id}`, body)\n      .then(res => setActiveUser(res.data))\n      .catch(err => console.log(err));\n  }\n\n  const handleUsernameChange = (newUsername) => {\n    axios.put(`http://localhost:5000/api/users/${activeUser._id}`, { username: newUsername })\n      .then(res => setActiveUser(res.data))\n      .catch(err => console.log(err));\n  }\n\n  const handleEmailChange = (newEmail) => {\n    axios.put(`http://localhost:5000/api/users/${activeUser._id}`, { email: newEmail })\n      .then(res => setActiveUser(res.data))\n      .catch(err => console.log(err));\n  }\n\n  const handleChangePassword = (newPassword) => {\n    axios.put(`http://localhost:5000/api/users/${activeUser._id}`, { password: newPassword })\n      .then(res => setActiveUser(res.data))\n      .catch(err => console.log(err));\n  }\n\n  const handleDeactivateAccount = () => {\n    axios.delete(`http://localhost:5000/api/users/${activeUser._id}`)\n      .then(res => {\n        console.log(res);\n        setActiveUser(null);\n      })\n      .catch(err => console.log(err));\n  }\n\n  const handleNewTweet = (tweetText) => {\n    const tweet = {\n      userId: activeUser._id,\n      text: tweetText,\n      reply: false\n    };\n\n    axios.post('http://localhost:5000/api/tweets/new', tweet)\n      .then(res => setActiveUser(res.data.user))\n      .catch(err => console.log(err));\n  }\n\n  const handleTweetEvent = (tweetId, action) => {\n    axios.put(`http://localhost:5000/api/tweets/${tweetId}/${action}`, { userId: activeUser._id })\n      .then(res => setActiveUser(res.data.user))\n      .catch(err => console.log(err));\n  }\n\n  const handleLike = (tweetId) => {\n    handleTweetEvent(tweetId, 'like');\n  }\n\n  const handleUnlike = (tweetId) => {\n    handleTweetEvent(tweetId, 'unlike');\n  }\n\n  const handleRetweet = (tweetId) => {\n    handleTweetEvent(tweetId, 'retweet');\n  }\n\n  const handleRemoveRetweet = (tweetId) => {\n    handleTweetEvent(tweetId, 'retweet/remove');\n  }\n\n  const handleReply = (tweetId, tweetText) => {\n    const tweet = {\n      userId: activeUser._id,\n      text: tweetText,\n      reply: true,\n      replyTo: tweetId\n    }\n\n    axios.post(`http://localhost:5000/api/tweets/${tweetId}/reply`, tweet)\n      .then(res => setActiveUser(res.data.user))\n      .catch(err => console.log(err));\n  }\n\n  const handleDeleteReply = (tweetId, replyId) => {\n    axios.delete(`http://localhost:5000/api/tweets/${tweetId}/delete/${replyId}`)\n      .catch(err => console.log(err));\n\n    axios.get(`http://localhost:5000/api/users/active/${activeUser._id}`)\n      .then(res => setActiveUser(res.data))\n      .catch(err => console.log(err));\n  }\n\n  const handleDeleteTweet = (tweetId) => {\n    axios.delete(`http://localhost:5000/api/tweets/${tweetId}`, { userId: activeUser._id })\n      .catch(err => console.log(err));\n    axios.get(`http://localhost:5000/api/users/active/${activeUser._id}`)\n      .then(res => setActiveUser(res.data))\n      .catch(err => console.log(err));\n  }\n\n  const handleBookmark = (tweetId) => {\n    axios.put(`http://localhost:5000/api/tweets/${tweetId}/bookmark`, { userId: activeUser._id })\n      .then(res => setActiveUser(res.data))\n      .catch(err => console.log(err));\n  }\n\n  const handleRemoveBookmark = (tweetId) => {\n    axios.put(`http://localhost:5000/api/tweets/${tweetId}/bookmark/remove`, { userId: activeUser._id })\n      .then(res => setActiveUser(res.data))\n      .catch(err => console.log(err));\n  }\n\n  const handleClearBookmarks = () => {\n    axios.put(`http://localhost:5000/api/users/${activeUser._id}/bookmarks/clear`)\n      .then(res => setActiveUser(res.data))\n      .catch(err => console.log(err));\n  }\n\n  const handleFollowUser = (userId) => {\n    axios.put(`http://localhost:5000/api/users/${userId}/follow`, { userId: activeUser._id })\n      .then(res => setActiveUser(res.data.currentUser))\n      .catch(err => console.log(err));\n  }\n\n  const handleUnfollowUser = (userId) => {\n    axios.put(`http://localhost:5000/api/users/${userId}/unfollow`, { userId: activeUser._id })\n      .then(res => setActiveUser(res.data.currentUser))\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Base />} />\n        <Route path=\"/signup\" element={<SignUp handleSetActiveUser={handleSetActiveUser} />} />\n        <Route path=\"/login\" element={<Login handleSetActiveUser={handleSetActiveUser} />} />\n        <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n        <Route \n          path=\"/home\" \n          element={\n            <Home \n              activeUser={activeUser}\n              handleNewTweet={handleNewTweet}\n              handleLike={handleLike} \n              handleUnlike={handleUnlike}\n              handleRetweet={handleRetweet}\n              handleRemoveRetweet={handleRemoveRetweet}\n              handleDeleteTweet={handleDeleteTweet}\n              handleBookmark={handleBookmark}\n              handleRemoveBookmark={handleRemoveBookmark}\n            />\n          } \n        />\n        <Route \n          path=\"/:username/status/:tweetId\" \n          element={\n            <DetailedTweet \n              activeUser={activeUser}\n              handleLike={handleLike} \n              handleUnlike={handleUnlike}\n              handleRetweet={handleRetweet}\n              handleRemoveRetweet={handleRemoveRetweet}\n              handleReply={handleReply}\n              handleDeleteReply={handleDeleteReply}\n              handleDeleteTweet={handleDeleteTweet}\n              handleBookmark={handleBookmark}\n              handleRemoveBookmark={handleRemoveBookmark}\n            />\n          }\n        />\n        <Route \n          path=\"/:username/status/:tweetId/retweets\"\n          element={<DetailedTweetRetweets \n            activeUser={activeUser}\n            handleFollow={handleFollowUser}\n            handleUnfollow={handleUnfollowUser}\n          />}\n        />\n        <Route \n          path=\"/:username/status/:tweetId/likes\"\n          element={<DetailedTweetLikes \n            activeUser={activeUser}\n            handleFollow={handleFollowUser}\n            handleUnfollow={handleUnfollowUser}\n          />}\n        />\n        <Route \n          path=\"/:username/status/:tweetId/reply\"\n          element={<ReplyTweet activeUser={activeUser} handleReply={handleReply} />}  \n        />\n        <Route path=\"/compose/tweet\" element={<ComposeTweet activeUser={activeUser} handleNewTweet={handleNewTweet} />} />\n        <Route \n          path=\"/:username\" \n          element={\n            <Profile \n              activeUser={activeUser}\n              handleLike={handleLike} \n              handleUnlike={handleUnlike}\n              handleRetweet={handleRetweet}\n              handleRemoveRetweet={handleRemoveRetweet}\n              handleDeleteReply={handleDeleteReply}\n              handleDeleteTweet={handleDeleteTweet}\n              handleFollowUser={handleFollowUser}\n              handleUnfollowUser={handleUnfollowUser}\n              handleBookmark={handleBookmark}\n              handleRemoveBookmark={handleRemoveBookmark}\n            />\n          } \n        />\n        <Route \n          path=\"/:username/followers\" \n          element={<Followers activeUser={activeUser} handleFollow={handleFollowUser} handleUnfollow={handleUnfollowUser} />} \n        />\n        <Route \n          path=\"/:username/following\" \n          element={<Following activeUser={activeUser} handleFollow={handleFollowUser} handleUnfollow={handleUnfollowUser} />} \n        />\n        <Route path=\"/explore\" element={<Explore activeUser={activeUser} />} />\n        <Route path=\"/notifications\" element={<Notifications activeUser={activeUser} />} />\n        <Route path=\"/messages\" element={<Messages activeUser={activeUser} />} />\n        <Route \n          path=\"/:username/bookmarks\" \n          element={\n            <Bookmarks \n              activeUser={activeUser}\n              handleLike={handleLike}\n              handleUnlike={handleUnlike}\n              handleRetweet={handleRetweet}\n              handleRemoveRetweet={handleRemoveRetweet}\n              handleRemoveBookmark={handleRemoveBookmark}\n              handleClearBookmarks={handleClearBookmarks}\n            />\n          }\n        />\n        <Route path=\"/settings\" element={<Settings activeUser={activeUser} />} />\n        <Route \n          path=\"/settings/profile\" \n          element={\n            <ProfileSettings \n              activeUser={activeUser} \n              handleUpdateProfile={handleUpdateProfile}\n            />\n          } \n        />\n        <Route path=\"/settings/account\" element={<AccountSettings activeUser={activeUser} />} />\n        <Route path=\"/settings/your_twitter_data/account\" element={<AccountInformation activeUser={activeUser} />} />\n        <Route \n          path=\"/settings/username\" \n          element={\n            <ChangeUsername \n              activeUser={activeUser} \n              handleUsernameChange={handleUsernameChange} \n            />\n          } \n        />\n        <Route \n          path=\"/settings/email\"\n          element={\n            <ChangeEmail \n              activeUser={activeUser}\n              handleEmailChange={handleEmailChange}\n            />\n          }\n        />\n        <Route \n          path=\"/settings/password\" \n          element={\n            <ChangePassword \n              activeUser={activeUser} \n              handleChangePassword={handleChangePassword} \n            />\n          } \n        />\n        <Route \n          path=\"/settings/deactivate\"\n          element={\n            <DeactivateAccount \n              activeUser={activeUser}\n              handleDeactivateAccount={handleDeactivateAccount}\n            />\n          }\n        />\n        <Route path=\"*\" element={<ComingSoon activeUser={activeUser} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}